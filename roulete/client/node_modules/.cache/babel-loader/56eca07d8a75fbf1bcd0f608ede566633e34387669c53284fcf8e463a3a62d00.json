{"ast":null,"code":"import io from\"socket.io-client\";import axios from\"axios\";import{useEffect,useRef,useState}from\"react\";import Cookies from\"js-cookie\";import MainPageLoading from\"./MainPageLoading\";import MainPageConnected from\"./MainPageConnected\";import MainPageDefault from\"./MainPageDefault\";import MainPageDisconnected from\"./MainPageDisconnected\";import config from\"../../config/config.json\";import{jsx as _jsx,Fragment as _Fragment}from\"react/jsx-runtime\";const socket=io(\"https://\".concat(config.hostname,\":\").concat(config.port));const configuration={iceServers:[{urls:\"stun:stun.l.google.com:19302\"}]};export function MainPage(){const[localStream,setLocalStream]=useState();const[infoSocket,setInfoSocket]=useState();const[peerConnection,setPeerConnection]=useState(new RTCPeerConnection(configuration));const[isLoading,setLoading]=useState(false);const[isDisconnected,setDisconnected]=useState(false);const[mediaRecorder,setMediaRecorder]=useState(undefined);const[recordedChunks,setRecordedChunks]=useState();const localStreamRef=useRef(undefined);const infoSocketRef=useRef();const infoSocketRefPrev=useRef();const loadingRef=useRef();const remoteAudioRef=useRef(null);const mediaRecorderRef=useRef(undefined);const recordedChunksRef=useRef();useEffect(()=>{peerConnection.ontrack=event=>{if(event.streams&&event.streams[0]){remoteAudioRef.current.srcObject=event.streams[0];}};socket.on(\"connection\",data=>{setLoading(false);startRecording(localStreamRef.current);loadingRef.current=false;setInfoSocket(prevState=>{return{...prevState,connectedUserID:data.userID,connectedUserSocketID:data.socketID,isSendingOffer:data.isSendingOffer};});infoSocketRef.current={...infoSocketRef.current,connectedUserID:data.userID,connectedUserSocketID:data.socketID,isSendingOffer:data.isSendingOffer};});socket.on(\"candidate\",data=>{peerConnection.addIceCandidate(data.candidate).then(()=>{console.log(\"added Candidate\",data.candidate,\"from \",data.sender);}).catch(error=>console.log(\"Ошибка установки ICE кандидата\",error));});socket.on(\"answer\",async data=>{const answer=new RTCSessionDescription({type:data.type,sdp:data.sdp});try{await peerConnection.setRemoteDescription(answer);console.log(\"Удаленное описание ответа установлено успешно.\");}catch(error){setLoading(false);loadingRef.current=false;console.error(\"Ошибка при установке удаленного описания ответа:\",error);}});socket.on(\"offer\",async data=>{const offer=new RTCSessionDescription({type:data.type,sdp:data.sdp});try{var _peerConnection$local;await peerConnection.setRemoteDescription(offer);const answer=await peerConnection.createAnswer();await peerConnection.setLocalDescription(answer);console.log(\"emit answer to \".concat(infoSocketRef.current));socket.emit(\"answer\",{type:\"answer\",sdp:(_peerConnection$local=peerConnection.localDescription)===null||_peerConnection$local===void 0?void 0:_peerConnection$local.sdp,infoSocket:infoSocketRef.current});}catch(error){setLoading(false);loadingRef.current=false;console.error(\"Ошибка при установке удаленного описания предложения:\",error);}});socket.on(\"endCall\",()=>{infoSocketRefPrev.current=infoSocketRef.current;stopRecording().then(async audioBlob=>{var _infoSocketRefPrev$cu,_infoSocketRefPrev$cu2,_infoSocketRefPrev$cu3;const formData=new FormData();console.log(audioBlob);formData.append(\"audioFile\",audioBlob,\"Conv\".concat((_infoSocketRefPrev$cu=infoSocketRefPrev.current)===null||_infoSocketRefPrev$cu===void 0?void 0:_infoSocketRefPrev$cu.userID,\"and\").concat((_infoSocketRefPrev$cu2=infoSocketRefPrev.current)===null||_infoSocketRefPrev$cu2===void 0?void 0:_infoSocketRefPrev$cu2.connectedUserID));formData.append(\"userId\",(_infoSocketRefPrev$cu3=infoSocketRefPrev.current)===null||_infoSocketRefPrev$cu3===void 0?void 0:_infoSocketRefPrev$cu3.userID);formData.forEach(el=>{console.log(el);});try{const response=await axios.post(\"https://\".concat(config.hostname,\":\").concat(config.port,\"/api/files/upload_recording\"),formData,{headers:{\"Content-Type\":\"multipart/form-data\"}});console.log(response.status);}catch(err){console.error(err);}});setInfoSocket({});infoSocketRef.current={};setLocalStream(undefined);localStreamRef.current=undefined;setDisconnected(true);mediaRecorder===null||mediaRecorder===void 0?void 0:mediaRecorder.stop();});function handleBeforeUnload(event){event.preventDefault();infoSocketRefPrev.current=infoSocketRef.current;stopRecording().then(async audioBlob=>{var _infoSocketRefPrev$cu4,_infoSocketRefPrev$cu5,_infoSocketRefPrev$cu6;const formData=new FormData();console.log(audioBlob);formData.append(\"audioFile\",audioBlob,\"Conv\".concat((_infoSocketRefPrev$cu4=infoSocketRefPrev.current)===null||_infoSocketRefPrev$cu4===void 0?void 0:_infoSocketRefPrev$cu4.userID,\"and\").concat((_infoSocketRefPrev$cu5=infoSocketRefPrev.current)===null||_infoSocketRefPrev$cu5===void 0?void 0:_infoSocketRefPrev$cu5.connectedUserID));formData.append(\"userId\",(_infoSocketRefPrev$cu6=infoSocketRefPrev.current)===null||_infoSocketRefPrev$cu6===void 0?void 0:_infoSocketRefPrev$cu6.userID);formData.forEach(el=>{console.log(el);});try{const response=await fetch(\"https://\".concat(config.hostname,\":\").concat(config.port,\"/api/files/upload_recording\"),{method:'POST',body:formData,keepalive:true});console.log(response.status);}catch(err){console.error(err);}});setInfoSocket({});infoSocketRef.current={};setLocalStream(undefined);localStreamRef.current=undefined;setDisconnected(true);mediaRecorder===null||mediaRecorder===void 0?void 0:mediaRecorder.stop();}window.addEventListener('beforeunload',handleBeforeUnload);return()=>{localStream===null||localStream===void 0?void 0:localStream.getTracks().forEach(track=>track.stop());mediaRecorder===null||mediaRecorder===void 0?void 0:mediaRecorder.stop();socket.off(\"connection\");socket.off(\"offer\");socket.off(\"answer\");socket.off(\"candidate\");socket.off(\"endCall\");window.removeEventListener('beforeunload',handleBeforeUnload);};},[]);const getUserId=()=>{const id=Cookies.get(\"userIdState\");if(id===undefined){alert(\"Сначала войдите в аккаунт\");return;}loadingRef.current=true;socket.emit(\"auth\",id);setInfoSocket(prevState=>{return{...prevState,socketID:socket.id,userID:id};});infoSocketRef.current={...infoSocketRef.current,socketID:socket.id,userID:id};getMedia(id);};const getMedia=async id=>{try{const stream=await navigator.mediaDevices.getUserMedia({audio:true,video:false});setLoading(true);setLocalStream(stream);}catch(err){setLoading(false);loadingRef.current=false;console.error(\"Не удалось получить доступ к микрофону\",err);}};useEffect(()=>{if(infoSocket!==null&&infoSocket!==void 0&&infoSocket.userID){getMedia(infoSocket.userID);}},[infoSocket===null||infoSocket===void 0?void 0:infoSocket.userID]);useEffect(()=>{if(localStream&&localStreamRef.current===undefined){startCall(localStream);localStreamRef.current=localStream;}},[localStream]);useEffect(()=>{if(infoSocket!==null&&infoSocket!==void 0&&infoSocket.isSendingOffer){createOffer();}sendIceCandidates();},[infoSocket===null||infoSocket===void 0?void 0:infoSocket.connectedUserID]);const startCall=async stream=>{try{const offer=await peerConnection.createOffer();await peerConnection.setLocalDescription(offer);socket.emit(\"searchForAUser\",infoSocket===null||infoSocket===void 0?void 0:infoSocket.userID);stream.getTracks().forEach(track=>{peerConnection.addTrack(track,stream);});}catch(error){console.error(\"Ошибка создания или установки предложения.\",error);setLoading(false);loadingRef.current=false;}};const createOffer=async()=>{const offer=await peerConnection.createOffer();peerConnection.setLocalDescription(offer).then(()=>{var _peerConnection$local2;socket.emit(\"offer\",{type:\"offer\",sdp:(_peerConnection$local2=peerConnection.localDescription)===null||_peerConnection$local2===void 0?void 0:_peerConnection$local2.sdp,infoSocket:infoSocketRef.current});});};const sendIceCandidates=async()=>{peerConnection.onicecandidate=event=>{if(event.candidate){var _infoSocketRef$curren;socket.emit(\"candidate\",{candidate:event.candidate,target:(_infoSocketRef$curren=infoSocketRef.current)===null||_infoSocketRef$curren===void 0?void 0:_infoSocketRef$curren.connectedUserSocketID});}};};const startRecording=stream=>{if(stream){const mediaRecorderInstance=new MediaRecorder(stream);mediaRecorderRef.current=mediaRecorderInstance;mediaRecorderInstance.ondataavailable=event=>{console.log(event.data.size,event.data);if(event.data.size>0){setRecordedChunks(event.data);recordedChunksRef.current=event.data;console.log(\"here\");}};mediaRecorderInstance.start();setMediaRecorder(mediaRecorderInstance);console.log(\"Recording started\");}};const stopRecording=()=>{return new Promise((resolve,reject)=>{console.log(infoSocketRef.current);if(mediaRecorderRef.current){mediaRecorderRef.current.onstop=()=>{console.log(recordedChunksRef.current);recordedChunksRef.current?resolve(recordedChunksRef.current):reject(\"empty recording\");};mediaRecorderRef.current.stop();console.log(\"Recording stopped\");}});};const cancelLoading=()=>{setLoading(false);loadingRef.current=false;socket.emit(\"endCall\",infoSocketRef.current);};const terminateCall=()=>{if(localStream){localStream.getTracks().forEach(track=>{track.stop();});setLocalStream(undefined);localStreamRef.current=undefined;}if(peerConnection){peerConnection.setLocalDescription(undefined);}setLoading(false);loadingRef.current=false;socket.emit(\"endCall\",infoSocketRef.current);setDisconnected(true);};return/*#__PURE__*/_jsx(_Fragment,{children:isDisconnected?/*#__PURE__*/_jsx(MainPageDisconnected,{returnBack:setDisconnected}):loadingRef.current?/*#__PURE__*/_jsx(MainPageLoading,{cancelLoading:cancelLoading}):infoSocket!==null&&infoSocket!==void 0&&infoSocket.connectedUserID?/*#__PURE__*/_jsx(MainPageConnected,{localStream:localStream,remoteAudioRef:remoteAudioRef,terminateCall:terminateCall}):/*#__PURE__*/_jsx(MainPageDefault,{getUserId:getUserId,localStream:localStream,remoteAudioRef:remoteAudioRef})});}","map":{"version":3,"names":["io","axios","useEffect","useRef","useState","Cookies","MainPageLoading","MainPageConnected","MainPageDefault","MainPageDisconnected","config","jsx","_jsx","Fragment","_Fragment","socket","concat","hostname","port","configuration","iceServers","urls","MainPage","localStream","setLocalStream","infoSocket","setInfoSocket","peerConnection","setPeerConnection","RTCPeerConnection","isLoading","setLoading","isDisconnected","setDisconnected","mediaRecorder","setMediaRecorder","undefined","recordedChunks","setRecordedChunks","localStreamRef","infoSocketRef","infoSocketRefPrev","loadingRef","remoteAudioRef","mediaRecorderRef","recordedChunksRef","ontrack","event","streams","current","srcObject","on","data","startRecording","prevState","connectedUserID","userID","connectedUserSocketID","socketID","isSendingOffer","addIceCandidate","candidate","then","console","log","sender","catch","error","answer","RTCSessionDescription","type","sdp","setRemoteDescription","offer","_peerConnection$local","createAnswer","setLocalDescription","emit","localDescription","stopRecording","audioBlob","_infoSocketRefPrev$cu","_infoSocketRefPrev$cu2","_infoSocketRefPrev$cu3","formData","FormData","append","forEach","el","response","post","headers","status","err","stop","handleBeforeUnload","preventDefault","_infoSocketRefPrev$cu4","_infoSocketRefPrev$cu5","_infoSocketRefPrev$cu6","fetch","method","body","keepalive","window","addEventListener","getTracks","track","off","removeEventListener","getUserId","id","get","alert","getMedia","stream","navigator","mediaDevices","getUserMedia","audio","video","startCall","createOffer","sendIceCandidates","addTrack","_peerConnection$local2","onicecandidate","_infoSocketRef$curren","target","mediaRecorderInstance","MediaRecorder","ondataavailable","size","start","Promise","resolve","reject","onstop","cancelLoading","terminateCall","children","returnBack"],"sources":["/home/goik4/Универ/corsework/Voice-Roulete-Coursework/Voice-Roulete-Coursework/roulete/client/src/routes/MainPage/MainPage.tsx"],"sourcesContent":["import io from \"socket.io-client\";\nimport axios from \"axios\";\nimport { useEffect, useRef, useState } from \"react\";\nimport Cookies from \"js-cookie\";\nimport MainPageLoading from \"./MainPageLoading\";\nimport MainPageConnected from \"./MainPageConnected\";\nimport MainPageDefault from \"./MainPageDefault\";\nimport MainPageDisconnected from \"./MainPageDisconnected\";\nimport config from \"../../config/config.json\"\n\nconst socket = io(`https://${config.hostname}:${config.port}`);\nconst configuration = {\n  iceServers: [{ urls: \"stun:stun.l.google.com:19302\" }],\n};\n\nexport function MainPage() {\n  const [localStream, setLocalStream] = useState<LocalStream>();\n  const [infoSocket, setInfoSocket] = useState<setInfoSocket>();\n  const [peerConnection, setPeerConnection] = useState<RTCPeerConnection>(\n    new RTCPeerConnection(configuration)\n  );\n  const [isLoading, setLoading] = useState<boolean>(false);\n  const [isDisconnected, setDisconnected] = useState<boolean>(false);\n  const [mediaRecorder, setMediaRecorder] = useState<LocalRecorder>(undefined);\n  const [recordedChunks, setRecordedChunks] = useState<Blob>();\n\n  const localStreamRef = useRef<LocalStream>(undefined);\n  const infoSocketRef = useRef<setInfoSocket>();\n  const infoSocketRefPrev = useRef<setInfoSocket>();\n  const loadingRef = useRef<boolean>();\n  const remoteAudioRef = useRef<HTMLAudioElement>(null);\n  const mediaRecorderRef = useRef<LocalRecorder>(undefined);\n  const recordedChunksRef = useRef<Blob>();\n\n  useEffect(() => {\n    peerConnection.ontrack = (event) => {\n      if (event.streams && event.streams[0]) {\n        remoteAudioRef.current!.srcObject = event.streams[0];\n      }\n    };\n\n    socket.on(\"connection\", (data) => {\n      setLoading(false);\n      startRecording(localStreamRef.current);\n      loadingRef.current = false;\n      setInfoSocket((prevState) => {\n        return {\n          ...prevState,\n          connectedUserID: data.userID,\n          connectedUserSocketID: data.socketID,\n          isSendingOffer: data.isSendingOffer,\n        };\n      });\n      infoSocketRef.current = {\n        ...infoSocketRef.current,\n        connectedUserID: data.userID,\n        connectedUserSocketID: data.socketID,\n        isSendingOffer: data.isSendingOffer,\n      };\n    });\n\n    socket.on(\"candidate\", (data) => {\n      peerConnection\n        .addIceCandidate(data.candidate)\n        .then(() => {\n          console.log(\"added Candidate\", data.candidate, \"from \", data.sender);\n        })\n        .catch((error) => console.log(\"Ошибка установки ICE кандидата\", error));\n    });\n\n    socket.on(\"answer\", async (data) => {\n      const answer = new RTCSessionDescription({\n        type: data.type,\n        sdp: data.sdp,\n      });\n\n      try {\n        await peerConnection.setRemoteDescription(answer);\n        console.log(\"Удаленное описание ответа установлено успешно.\");\n      } catch (error) {\n        setLoading(false);\n        loadingRef.current = false;\n        console.error(\n          \"Ошибка при установке удаленного описания ответа:\",\n          error\n        );\n      }\n    });\n\n    socket.on(\"offer\", async (data) => {\n      const offer = new RTCSessionDescription({\n        type: data.type,\n        sdp: data.sdp,\n      });\n\n      try {\n        await peerConnection.setRemoteDescription(offer);\n        const answer = await peerConnection.createAnswer();\n        await peerConnection.setLocalDescription(answer);\n        console.log(`emit answer to ${infoSocketRef.current}`);\n        socket.emit(\"answer\", {\n          type: \"answer\",\n          sdp: peerConnection.localDescription?.sdp,\n          infoSocket: infoSocketRef.current,\n        });\n      } catch (error) {\n        setLoading(false);\n        loadingRef.current = false;\n        console.error(\n          \"Ошибка при установке удаленного описания предложения:\",\n          error\n        );\n      }\n    });\n\n    socket.on(\"endCall\", () => {\n      infoSocketRefPrev.current = infoSocketRef.current;\n      stopRecording().then(async (audioBlob) => {\n        const formData = new FormData();\n        console.log(audioBlob);\n        formData.append(\n          \"audioFile\",\n          audioBlob,\n          `Conv${infoSocketRefPrev.current?.userID}and${infoSocketRefPrev.current?.connectedUserID}`\n        );\n        formData.append(\n          \"userId\",\n          infoSocketRefPrev.current?.userID as string,\n        )\n        formData.forEach((el) => {\n          console.log(el);\n        });\n        try {\n          const response = await axios.post(\n            `https://${config.hostname}:${config.port}/api/files/upload_recording`,\n            formData,\n            {\n              headers: {\n                \"Content-Type\": \"multipart/form-data\",\n              },\n            }\n          );\n          console.log(response.status);\n        } catch (err) {\n          console.error(err);\n        }\n      });\n      setInfoSocket({});\n      infoSocketRef.current = {};\n      setLocalStream(undefined);\n      localStreamRef.current = undefined;\n      setDisconnected(true);\n      mediaRecorder?.stop();\n    });\n\n    function handleBeforeUnload(event:Event){\n      event.preventDefault();\n      infoSocketRefPrev.current = infoSocketRef.current;\n      stopRecording().then(async (audioBlob) => {\n        const formData = new FormData();\n        console.log(audioBlob);\n        formData.append(\n          \"audioFile\",\n          audioBlob,\n          `Conv${infoSocketRefPrev.current?.userID}and${infoSocketRefPrev.current?.connectedUserID}`\n        );\n        formData.append(\n          \"userId\",\n          infoSocketRefPrev.current?.userID as string,\n        )\n        formData.forEach((el) => {\n          console.log(el);\n        });\n        try {\n          const response = await fetch(`https://${config.hostname}:${config.port}/api/files/upload_recording`, {\n            method: 'POST',\n            body: formData,\n            keepalive: true, \n          });\n          console.log(response.status);\n        } catch (err) {\n          console.error(err);\n        }\n      });\n      setInfoSocket({});\n      infoSocketRef.current = {};\n      setLocalStream(undefined);\n      localStreamRef.current = undefined;\n      setDisconnected(true);\n      mediaRecorder?.stop();\n    }\n\n    window.addEventListener('beforeunload', handleBeforeUnload);\n\n    return () => {\n      localStream?.getTracks().forEach((track) => track.stop());\n      mediaRecorder?.stop();\n      socket.off(\"connection\");\n      socket.off(\"offer\");\n      socket.off(\"answer\");\n      socket.off(\"candidate\");\n      socket.off(\"endCall\");\n      window.removeEventListener('beforeunload', handleBeforeUnload);\n    };\n  }, []);\n\n  const getUserId = () => {\n    const id = Cookies.get(\"userIdState\");\n    if (id === undefined) {\n      alert(\"Сначала войдите в аккаунт\");\n      return;\n    }\n    loadingRef.current = true;\n    socket.emit(\"auth\", id);\n    setInfoSocket((prevState) => {\n      return { ...prevState, socketID: socket.id, userID: id };\n    });\n    infoSocketRef.current = {\n      ...infoSocketRef.current,\n      socketID: socket.id,\n      userID: id,\n    };\n    getMedia(id);\n  };\n\n  const getMedia = async (id: string) => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true,\n        video: false,\n      });\n      setLoading(true);\n      setLocalStream(stream);\n    } catch (err) {\n      setLoading(false);\n      loadingRef.current = false;\n      console.error(\"Не удалось получить доступ к микрофону\", err);\n    }\n  };\n\n  useEffect(() => {\n    if (infoSocket?.userID) {\n      getMedia(infoSocket.userID);\n    }\n  }, [infoSocket?.userID]);\n\n  useEffect(() => {\n    if (localStream && localStreamRef.current === undefined) {\n      startCall(localStream);\n      localStreamRef.current = localStream;\n    }\n  }, [localStream]);\n\n  useEffect(() => {\n    if (infoSocket?.isSendingOffer) {\n      createOffer();\n    }\n    sendIceCandidates();\n  }, [infoSocket?.connectedUserID]);\n\n  const startCall = async (stream: MediaStream) => {\n    try {\n      const offer = await peerConnection.createOffer();\n      await peerConnection.setLocalDescription(offer);\n      socket.emit(\"searchForAUser\", infoSocket?.userID);\n\n      stream.getTracks().forEach((track) => {\n        peerConnection.addTrack(track, stream);\n      });\n    } catch (error) {\n      console.error(\"Ошибка создания или установки предложения.\", error);\n      setLoading(false);\n      loadingRef.current = false;\n    }\n  };\n\n  const createOffer = async () => {\n    const offer = await peerConnection.createOffer();\n    peerConnection.setLocalDescription(offer).then(() => {\n      socket.emit(\"offer\", {\n        type: \"offer\",\n        sdp: peerConnection.localDescription?.sdp,\n        infoSocket: infoSocketRef.current,\n      });\n    });\n  };\n\n  const sendIceCandidates = async () => {\n    peerConnection.onicecandidate = (event) => {\n      if (event.candidate) {\n        socket.emit(\"candidate\", {\n          candidate: event.candidate,\n          target: infoSocketRef.current?.connectedUserSocketID,\n        });\n      }\n    };\n  };\n\n  const startRecording = (stream: LocalStream) => {\n    if (stream) {\n      const mediaRecorderInstance = new MediaRecorder(stream);\n      mediaRecorderRef.current = mediaRecorderInstance;\n\n      mediaRecorderInstance.ondataavailable = (event) => {\n        console.log(event.data.size, event.data);\n        if (event.data.size > 0) {\n          setRecordedChunks(event.data);\n          recordedChunksRef.current = event.data;\n          console.log(\"here\");\n        }\n      };\n\n      mediaRecorderInstance.start();\n      setMediaRecorder(mediaRecorderInstance);\n      console.log(\"Recording started\");\n    }\n  };\n\n  const stopRecording = () => {\n    return new Promise<Blob>((resolve, reject) => {\n      console.log(infoSocketRef.current);\n      if (mediaRecorderRef.current) {\n        mediaRecorderRef.current!.onstop = () => {\n          console.log(recordedChunksRef.current);\n          recordedChunksRef.current\n            ? resolve(recordedChunksRef.current)\n            : reject(\"empty recording\");\n        };\n        mediaRecorderRef.current!.stop();\n        console.log(\"Recording stopped\");\n      }\n    });\n  };\n\n  const cancelLoading = () => {\n    setLoading(false);\n    loadingRef.current = false;\n    socket.emit(\"endCall\", infoSocketRef.current);\n  };\n\n  const terminateCall = () => {\n    if (localStream) {\n      localStream.getTracks().forEach((track) => {\n        track.stop();\n      });\n      setLocalStream(undefined);\n      localStreamRef.current = undefined;\n    }\n    if (peerConnection) {\n      peerConnection.setLocalDescription(undefined);\n    }\n    setLoading(false);\n    loadingRef.current = false;\n    socket.emit(\"endCall\", infoSocketRef.current);\n    setDisconnected(true);\n  };\n\n  return (\n    <>\n      {isDisconnected ? (\n        <MainPageDisconnected returnBack={setDisconnected} />\n      ) : loadingRef.current ? (\n        <MainPageLoading cancelLoading={cancelLoading} />\n      ) : infoSocket?.connectedUserID ? (\n        <MainPageConnected\n          localStream={localStream}\n          remoteAudioRef={remoteAudioRef}\n          terminateCall={terminateCall}\n        />\n      ) : (\n        <MainPageDefault\n          getUserId={getUserId}\n          localStream={localStream}\n          remoteAudioRef={remoteAudioRef}\n        />\n      )}\n    </>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}