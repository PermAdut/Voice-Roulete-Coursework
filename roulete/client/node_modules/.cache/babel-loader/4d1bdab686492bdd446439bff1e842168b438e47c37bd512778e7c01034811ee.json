{"ast":null,"code":"var _jsxFileName = \"/home/goik4/\\u0423\\u043D\\u0438\\u0432\\u0435\\u0440/corsework/Voice-Roulete-Coursework/Voice-Roulete-Coursework/roulete/client/src/routes/MainPage/MainPage.tsx\",\n  _s = $RefreshSig$();\nimport io from \"socket.io-client\";\nimport { useEffect, useRef, useState } from \"react\";\nimport Cookies from \"js-cookie\";\nimport MainPageLoading from \"./MainPageLoading\";\nimport MainPageConnected from \"./MainPageConnected\";\nimport MainPageDefault from \"./MainPageDefault\";\nimport MainPageDisconnected from \"./MainPageDisconnected\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io(\"https://192.168.0.114:5000\");\nconst configuration = {\n  iceServers: [{\n    urls: \"stun:stun.l.google.com:19302\"\n  }]\n};\nexport default function MainPage() {\n  _s();\n  const [localStream, setLocalStream] = useState();\n  const [infoSocket, setInfoSocket] = useState();\n  const [peerConnection, setPeerconnection] = useState(new RTCPeerConnection(configuration));\n  const [isLoading, setLoading] = useState(false);\n  const [isDisconnected, setDisconnected] = useState(false);\n  const [mediaRecorder, setMediaRecorder] = useState(undefined);\n  const [recordedChunks, setRecordedChunks] = useState([]);\n  const localStreamRef = useRef(undefined);\n  const infoSocketRef = useRef();\n  const loadingRef = useRef();\n  const remoteAudioRef = useRef(null);\n  useEffect(() => {\n    peerConnection.ontrack = event => {\n      if (event.streams && event.streams[0]) {\n        remoteAudioRef.current.srcObject = event.streams[0];\n      }\n    };\n    socket.on(\"connection\", data => {\n      setLoading(false);\n      loadingRef.current = false;\n      setInfoSocket(prevState => {\n        return {\n          ...prevState,\n          connectedUserID: data.userID,\n          connectedUserSocketID: data.socketID,\n          isSendingOffer: data.isSendingOffer\n        };\n      });\n      infoSocketRef.current = {\n        ...infoSocketRef.current,\n        connectedUserID: data.userID,\n        connectedUserSocketID: data.socketID,\n        isSendingOffer: data.isSendingOffer\n      };\n    });\n    socket.on(\"candidate\", data => {\n      peerConnection.addIceCandidate(data.candidate).then(() => {\n        console.log(\"added Candidate\", data.candidate, \"from \", data.sender);\n      }).catch(error => console.log(\"Ошибка установки ICE кандидата\", error));\n    });\n    socket.on(\"answer\", async data => {\n      const answer = new RTCSessionDescription({\n        type: data.type,\n        sdp: data.sdp\n      });\n      try {\n        await peerConnection.setRemoteDescription(answer);\n        console.log(\"Удаленное описание ответа установлено успешно.\");\n      } catch (error) {\n        setLoading(false);\n        loadingRef.current = false;\n        console.error(\"Ошибка при установке удаленного описания ответа:\", error);\n      }\n    });\n    socket.on(\"offer\", async data => {\n      const offer = new RTCSessionDescription({\n        type: data.type,\n        sdp: data.sdp\n      });\n      try {\n        var _peerConnection$local;\n        await peerConnection.setRemoteDescription(offer);\n        const answer = await peerConnection.createAnswer();\n        await peerConnection.setLocalDescription(answer);\n        console.log(`emit answer to ${infoSocketRef.current}`);\n        socket.emit(\"answer\", {\n          type: \"answer\",\n          sdp: (_peerConnection$local = peerConnection.localDescription) === null || _peerConnection$local === void 0 ? void 0 : _peerConnection$local.sdp,\n          infoSocket: infoSocketRef.current\n        });\n      } catch (error) {\n        setLoading(false);\n        loadingRef.current = false;\n        console.error(\"Ошибка при установке удаленного описания предложения:\", error);\n      }\n    });\n    socket.on(\"endCall\", () => {\n      console.log(\"disconnect\");\n      setInfoSocket({});\n      infoSocketRef.current = {};\n      setLocalStream(undefined);\n      localStreamRef.current = undefined;\n      setDisconnected(true);\n    });\n    return () => {\n      localStream === null || localStream === void 0 ? void 0 : localStream.getTracks().forEach(track => track.stop());\n      mediaRecorder === null || mediaRecorder === void 0 ? void 0 : mediaRecorder.stop();\n      socket.off(\"connection\");\n      socket.off(\"offer\");\n      socket.off(\"answer\");\n      socket.off(\"candidate\");\n      socket.off(\"endCall\");\n    };\n  }, []);\n  const getUserId = () => {\n    const id = Cookies.get(\"userIdState\");\n    if (id === undefined) {\n      alert(\"Сначала войдите в аккаунт\");\n      return;\n    }\n    setLoading(true);\n    loadingRef.current = true;\n    socket.emit(\"auth\", id);\n    setInfoSocket(prevState => {\n      return {\n        ...prevState,\n        socketID: socket.id,\n        userID: id\n      };\n    });\n    infoSocketRef.current = {\n      ...infoSocketRef.current,\n      socketID: socket.id,\n      userID: id\n    };\n    getMedia(id);\n  };\n  const getMedia = async id => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true,\n        video: false\n      });\n      console.log(\"stream\");\n      setLocalStream(stream);\n    } catch (err) {\n      setLoading(false);\n      loadingRef.current = false;\n      console.error(\"Не удалось получить доступ к микрофону\", err);\n    }\n  };\n  useEffect(() => {\n    if (infoSocket !== null && infoSocket !== void 0 && infoSocket.userID) {\n      getMedia(infoSocket.userID);\n    }\n  }, [infoSocket === null || infoSocket === void 0 ? void 0 : infoSocket.userID]);\n  useEffect(() => {\n    if (localStream && localStreamRef.current === undefined) {\n      startCall(localStream);\n      localStreamRef.current = localStream;\n    }\n  }, [localStream]);\n  useEffect(() => {\n    if (localStream && !mediaRecorder) {\n      const newMediaRecorder = new MediaRecorder(localStream);\n      newMediaRecorder.ondataavailable = event => {\n        if (event.data.size > 0) {\n          setRecordedChunks(prev => [...prev, event.data]);\n        }\n      };\n      newMediaRecorder.onstop = () => {\n        const blob = new Blob(recordedChunks, {\n          type: \"audio/webm\"\n        });\n        setRecordedChunks([]);\n      };\n      setMediaRecorder(newMediaRecorder);\n      newMediaRecorder.start();\n      return () => {\n        newMediaRecorder.stop();\n        setMediaRecorder(undefined);\n      };\n    }\n  }, [localStream]);\n  useEffect(() => {\n    if (infoSocket !== null && infoSocket !== void 0 && infoSocket.isSendingOffer) {\n      createOffer();\n    }\n    sendIceCandidates();\n  }, [infoSocket === null || infoSocket === void 0 ? void 0 : infoSocket.connectedUserID]);\n  const startCall = async stream => {\n    try {\n      const offer = await peerConnection.createOffer();\n      await peerConnection.setLocalDescription(offer);\n      socket.emit(\"searchForAUser\", infoSocket === null || infoSocket === void 0 ? void 0 : infoSocket.userID);\n\n      // Добавляем треки в peerConnection\n      stream.getTracks().forEach(track => {\n        console.log(\"track\");\n        peerConnection.addTrack(track, stream);\n      });\n    } catch (error) {\n      console.error(\"Ошибка создания или установки предложения.\", error);\n      setLoading(false);\n      loadingRef.current = false;\n    }\n  };\n  const createOffer = async () => {\n    const offer = await peerConnection.createOffer();\n    peerConnection.setLocalDescription(offer).then(() => {\n      var _peerConnection$local2;\n      socket.emit(\"offer\", {\n        type: \"offer\",\n        sdp: (_peerConnection$local2 = peerConnection.localDescription) === null || _peerConnection$local2 === void 0 ? void 0 : _peerConnection$local2.sdp,\n        infoSocket: infoSocketRef.current\n      });\n    });\n  };\n  const sendIceCandidates = async () => {\n    peerConnection.onicecandidate = event => {\n      if (event.candidate) {\n        var _infoSocketRef$curren;\n        socket.emit(\"candidate\", {\n          candidate: event.candidate,\n          target: (_infoSocketRef$curren = infoSocketRef.current) === null || _infoSocketRef$curren === void 0 ? void 0 : _infoSocketRef$curren.connectedUserSocketID\n        });\n      }\n    };\n  };\n  const cancelLoading = () => {\n    setLoading(false);\n    loadingRef.current = false;\n    socket.emit(\"endCall\", infoSocketRef.current);\n  };\n  const terminateCall = () => {\n    if (localStream) {\n      localStream.getTracks().forEach(track => {\n        track.stop();\n      });\n      setLocalStream(undefined);\n      localStreamRef.current = undefined;\n    }\n    if (peerConnection) {\n      // peerConnection.onicecandidate = null;\n      // peerConnection.ontrack = null;\n      // peerConnection.oniceconnectionstatechange = null;\n      // peerConnection.onsignalingstatechange = null;\n      // peerConnection.onicegatheringstatechange = null;\n      // peerConnection.onnegotiationneeded = null;\n      // peerConnection.close();\n      setPeerconnection(new RTCPeerConnection(configuration));\n    }\n    setLoading(false);\n    loadingRef.current = false;\n    socket.emit(\"endCall\", infoSocketRef.current);\n    setDisconnected(true);\n    setInfoSocket({});\n    infoSocketRef.current = {};\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isDisconnected ? /*#__PURE__*/_jsxDEV(MainPageDisconnected, {\n      returnBack: setDisconnected\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 9\n    }, this) : loadingRef.current ? /*#__PURE__*/_jsxDEV(MainPageLoading, {\n      cancelLoading: cancelLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 9\n    }, this) : infoSocket !== null && infoSocket !== void 0 && infoSocket.connectedUserID ? /*#__PURE__*/_jsxDEV(MainPageConnected, {\n      localStream: localStream,\n      remoteAudioRef: remoteAudioRef,\n      terminateCall: terminateCall\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(MainPageDefault, {\n      getUserId: getUserId,\n      localStream: localStream,\n      remoteAudioRef: remoteAudioRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(MainPage, \"gKBJWvSzFQk6+rVfycO4njIaJjM=\");\n_c = MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["io","useEffect","useRef","useState","Cookies","MainPageLoading","MainPageConnected","MainPageDefault","MainPageDisconnected","jsxDEV","_jsxDEV","Fragment","_Fragment","socket","configuration","iceServers","urls","MainPage","_s","localStream","setLocalStream","infoSocket","setInfoSocket","peerConnection","setPeerconnection","RTCPeerConnection","isLoading","setLoading","isDisconnected","setDisconnected","mediaRecorder","setMediaRecorder","undefined","recordedChunks","setRecordedChunks","localStreamRef","infoSocketRef","loadingRef","remoteAudioRef","ontrack","event","streams","current","srcObject","on","data","prevState","connectedUserID","userID","connectedUserSocketID","socketID","isSendingOffer","addIceCandidate","candidate","then","console","log","sender","catch","error","answer","RTCSessionDescription","type","sdp","setRemoteDescription","offer","_peerConnection$local","createAnswer","setLocalDescription","emit","localDescription","getTracks","forEach","track","stop","off","getUserId","id","get","alert","getMedia","stream","navigator","mediaDevices","getUserMedia","audio","video","err","startCall","newMediaRecorder","MediaRecorder","ondataavailable","size","prev","onstop","blob","Blob","start","createOffer","sendIceCandidates","addTrack","_peerConnection$local2","onicecandidate","_infoSocketRef$curren","target","cancelLoading","terminateCall","children","returnBack","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/goik4/Универ/corsework/Voice-Roulete-Coursework/Voice-Roulete-Coursework/roulete/client/src/routes/MainPage/MainPage.tsx"],"sourcesContent":["import io from \"socket.io-client\";\nimport { useEffect, useRef, useState } from \"react\";\nimport Cookies from \"js-cookie\";\nimport MainPageLoading from \"./MainPageLoading\";\nimport MainPageConnected from \"./MainPageConnected\";\nimport MainPageDefault from \"./MainPageDefault\";\nimport MainPageDisconnected from \"./MainPageDisconnected\";\n\nconst socket = io(\"https://192.168.0.114:5000\");\nconst configuration = {\n  iceServers: [{ urls: \"stun:stun.l.google.com:19302\" }],\n};\n\nexport default function MainPage() {\n  const [localStream, setLocalStream] = useState<MediaStream | undefined>();\n  const [infoSocket, setInfoSocket] = useState<setInfoSocket>();\n  const [peerConnection, setPeerconnection] = useState<RTCPeerConnection>(\n    new RTCPeerConnection(configuration)\n  );\n  const [isLoading, setLoading] = useState<boolean>(false);\n  const [isDisconnected, setDisconnected] = useState<boolean>(false);\n  const [mediaRecorder, setMediaRecorder] = useState<MediaRecorder | undefined>(undefined)\n  const [recordedChunks, setRecordedChunks] = useState<BlobPart[]>([])\n\n  const localStreamRef = useRef<MediaStream | undefined>(undefined);\n  const infoSocketRef = useRef<setInfoSocket>();\n  const loadingRef = useRef<boolean>();\n  const remoteAudioRef = useRef<HTMLAudioElement>(null);\n\n  useEffect(() => {\n    peerConnection.ontrack = (event) => {\n      if (event.streams && event.streams[0]) {\n        remoteAudioRef.current!.srcObject = event.streams[0];\n      }\n    };\n\n    socket.on(\"connection\", (data) => {\n      setLoading(false);\n      loadingRef.current = false;\n      setInfoSocket((prevState) => {\n        return {\n          ...prevState,\n          connectedUserID: data.userID,\n          connectedUserSocketID: data.socketID,\n          isSendingOffer: data.isSendingOffer,\n        };\n      });\n      infoSocketRef.current = {\n        ...infoSocketRef.current,\n        connectedUserID: data.userID,\n        connectedUserSocketID: data.socketID,\n        isSendingOffer: data.isSendingOffer,\n      };\n    });\n\n    socket.on(\"candidate\", (data) => {\n      peerConnection\n        .addIceCandidate(data.candidate)\n        .then(() => {\n          console.log(\"added Candidate\", data.candidate, \"from \", data.sender);\n        })\n        .catch((error) => console.log(\"Ошибка установки ICE кандидата\", error));\n    });\n\n    socket.on(\"answer\", async (data) => {\n      const answer = new RTCSessionDescription({\n        type: data.type,\n        sdp: data.sdp,\n      });\n\n      try {\n        await peerConnection.setRemoteDescription(answer);\n        console.log(\"Удаленное описание ответа установлено успешно.\");\n      } catch (error) {\n        setLoading(false);\n        loadingRef.current = false;\n        console.error(\n          \"Ошибка при установке удаленного описания ответа:\",\n          error\n        );\n      }\n    });\n\n    socket.on(\"offer\", async (data) => {\n      const offer = new RTCSessionDescription({\n        type: data.type,\n        sdp: data.sdp,\n      });\n\n      try {\n        await peerConnection.setRemoteDescription(offer);\n        const answer = await peerConnection.createAnswer();\n        await peerConnection.setLocalDescription(answer);\n        console.log(`emit answer to ${infoSocketRef.current}`);\n        socket.emit(\"answer\", {\n          type: \"answer\",\n          sdp: peerConnection.localDescription?.sdp,\n          infoSocket: infoSocketRef.current,\n        });\n      } catch (error) {\n        setLoading(false);\n        loadingRef.current = false;\n        console.error(\n          \"Ошибка при установке удаленного описания предложения:\",\n          error\n        );\n      }\n    });\n\n    socket.on(\"endCall\", () => {\n      console.log(\"disconnect\");\n      setInfoSocket({});\n      infoSocketRef.current = {};\n      setLocalStream(undefined);\n      localStreamRef.current = undefined;\n      setDisconnected(true)\n    });\n\n    return () => {\n      localStream?.getTracks().forEach((track) => track.stop());\n      mediaRecorder?.stop();\n      socket.off(\"connection\");\n      socket.off(\"offer\");\n      socket.off(\"answer\");\n      socket.off(\"candidate\");\n      socket.off(\"endCall\");\n    };\n  }, []);\n\n  const getUserId = () => {\n    const id = Cookies.get(\"userIdState\");\n    if (id === undefined) {\n      alert(\"Сначала войдите в аккаунт\");\n      return;\n    }\n    setLoading(true);\n    loadingRef.current = true;\n    socket.emit(\"auth\", id);\n    setInfoSocket((prevState) => {\n      return { ...prevState, socketID: socket.id, userID: id };\n    });\n    infoSocketRef.current = {\n      ...infoSocketRef.current,\n      socketID: socket.id,\n      userID: id,\n    };\n    getMedia(id);\n  };\n\n  const getMedia = async (id: string) => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true,\n        video: false,\n      });\n      console.log(\"stream\");\n      setLocalStream(stream);\n    } catch (err) {\n      setLoading(false);\n      loadingRef.current = false;\n      console.error(\"Не удалось получить доступ к микрофону\", err);\n    }\n  };\n\n  useEffect(() => {\n    if (infoSocket?.userID) {\n      getMedia(infoSocket.userID);\n    }\n  }, [infoSocket?.userID]);\n\n  useEffect(() => {\n    if (localStream && localStreamRef.current === undefined) {\n      startCall(localStream);\n      localStreamRef.current = localStream;\n    }\n  }, [localStream]);\n\n  useEffect(() => {\n    if (localStream && !mediaRecorder) {\n      const newMediaRecorder = new MediaRecorder(localStream);\n  \n      newMediaRecorder.ondataavailable = (event) => {\n        if (event.data.size > 0) {\n          setRecordedChunks((prev) => [...prev, event.data]);\n        }\n      };\n  \n      newMediaRecorder.onstop = () => {\n        const blob = new Blob(recordedChunks, { type: \"audio/webm\" });\n        setRecordedChunks([]);\n      };\n  \n      setMediaRecorder(newMediaRecorder);\n      newMediaRecorder.start();\n  \n      return () => {\n        newMediaRecorder.stop();\n        setMediaRecorder(undefined);\n      };\n    }\n  }, [localStream]);\n  \n\n  useEffect(() => {\n    if (infoSocket?.isSendingOffer) {\n      createOffer();\n    }\n    sendIceCandidates();\n  }, [infoSocket?.connectedUserID]);\n\n  const startCall = async (stream: MediaStream) => {\n    try {\n      const offer = await peerConnection.createOffer();\n      await peerConnection.setLocalDescription(offer);\n      socket.emit(\"searchForAUser\", infoSocket?.userID);\n\n      // Добавляем треки в peerConnection\n      stream.getTracks().forEach((track) => {\n        console.log(\"track\");\n        peerConnection.addTrack(track, stream);\n      });\n    } catch (error) {\n      console.error(\"Ошибка создания или установки предложения.\", error);\n      setLoading(false);\n      loadingRef.current = false;\n    }\n  };\n\n  const createOffer = async () => {\n    const offer = await peerConnection.createOffer();\n    peerConnection.setLocalDescription(offer).then(() => {\n      socket.emit(\"offer\", {\n        type: \"offer\",\n        sdp: peerConnection.localDescription?.sdp,\n        infoSocket: infoSocketRef.current,\n      });\n    });\n  };\n\n  const sendIceCandidates = async () => {\n    peerConnection.onicecandidate = (event) => {\n      if (event.candidate) {\n        socket.emit(\"candidate\", {\n          candidate: event.candidate,\n          target: infoSocketRef.current?.connectedUserSocketID,\n        });\n      }\n    };\n  };\n\n  const cancelLoading = () => {\n    setLoading(false);\n    loadingRef.current = false;\n    socket.emit(\"endCall\", infoSocketRef.current);\n  };\n\n  const terminateCall = () => {\n    if (localStream) {\n      localStream.getTracks().forEach((track) => {\n        track.stop();\n      });\n      setLocalStream(undefined);\n      localStreamRef.current = undefined;\n    }\n\n    if (peerConnection) {\n      // peerConnection.onicecandidate = null;\n      // peerConnection.ontrack = null;\n      // peerConnection.oniceconnectionstatechange = null;\n      // peerConnection.onsignalingstatechange = null;\n      // peerConnection.onicegatheringstatechange = null;\n      // peerConnection.onnegotiationneeded = null;\n      // peerConnection.close();\n      setPeerconnection(new RTCPeerConnection(configuration));\n    }\n\n    setLoading(false);\n    loadingRef.current = false;\n    socket.emit(\"endCall\", infoSocketRef.current);\n    setDisconnected(true);\n    setInfoSocket({});\n    infoSocketRef.current = {};\n  };\n\n  return (\n    <>\n      {isDisconnected ? (\n        <MainPageDisconnected returnBack={setDisconnected} />\n      ) : loadingRef.current ? (\n        <MainPageLoading cancelLoading={cancelLoading} />\n      ) : infoSocket?.connectedUserID ? (\n        <MainPageConnected\n          localStream={localStream}\n          remoteAudioRef={remoteAudioRef}\n          terminateCall={terminateCall}\n        />\n      ) : (\n        <MainPageDefault\n          getUserId={getUserId}\n          localStream={localStream}\n          remoteAudioRef={remoteAudioRef}\n        />\n      )}\n    </>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}