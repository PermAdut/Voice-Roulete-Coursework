{"ast":null,"code":"var _jsxFileName = \"/home/goik4/\\u0423\\u043D\\u0438\\u0432\\u0435\\u0440/corsework/Voice-Roulete-Coursework/Voice-Roulete-Coursework/roulete/client/src/routes/MainPage/MainPage.tsx\",\n  _s = $RefreshSig$();\nimport io from \"socket.io-client\";\nimport { useEffect, useRef, useState } from \"react\";\nimport Cookies from \"js-cookie\";\nimport MainPageLoading from \"./MainPageLoading\";\nimport MainPageConnected from \"./MainPageConnected\";\nimport MainPageDefault from \"./MainPageDefault\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost:5000\");\nconst configuration = {\n  iceServers: [{\n    urls: \"stun:stun.l.google.com:19302\"\n  }]\n};\nexport default function MainPage() {\n  _s();\n  const [localStream, setLocalStream] = useState();\n  const [infoSocket, setInfoSocket] = useState();\n  const [peerConnection, setPeerconnection] = useState(new RTCPeerConnection(configuration));\n  const [isLoading, setLoading] = useState(false);\n  //const [mediaRecorder, setMediaRecorder] = useState<MediaRecorder | undefined>(undefined)\n  //const [recordedChunks, setRecordedChunks] = useState<[]>()\n\n  const localStreamRef = useRef(undefined);\n  const infoSocketRef = useRef();\n  const loadingRef = useRef();\n  const remoteAudioRef = useRef(null);\n  useEffect(() => {\n    socket.on(\"connection\", data => {\n      setLoading(false);\n      loadingRef.current = false;\n      setInfoSocket(prevState => {\n        return {\n          ...prevState,\n          connectedUserID: data.userID,\n          connectedUserSocketID: data.socketID,\n          isSendingOffer: data.isSendingOffer\n        };\n      });\n      infoSocketRef.current = {\n        ...infoSocketRef.current,\n        connectedUserID: data.userID,\n        connectedUserSocketID: data.socketID,\n        isSendingOffer: data.isSendingOffer\n      };\n    });\n    socket.on(\"candidate\", data => {\n      peerConnection.addIceCandidate(data.candidate).then(() => {\n        //console.log(\"added Candidate\", data.candidate, \"from \", data.sender);\n      }).catch(error => console.log(\"Ошибка установки ICE кандидата\", error));\n    });\n    socket.on(\"answer\", async data => {\n      const answer = new RTCSessionDescription({\n        type: data.type,\n        sdp: data.sdp\n      });\n      try {\n        await peerConnection.setRemoteDescription(answer);\n        console.log(\"Удаленное описание ответа установлено успешно.\");\n      } catch (error) {\n        setLoading(false);\n        loadingRef.current = false;\n        console.error(\"Ошибка при установке удаленного описания ответа:\", error);\n      }\n    });\n    socket.on(\"offer\", async data => {\n      const offer = new RTCSessionDescription({\n        type: data.type,\n        sdp: data.sdp\n      });\n      try {\n        var _peerConnection$local;\n        await peerConnection.setRemoteDescription(offer);\n        const answer = await peerConnection.createAnswer();\n        await peerConnection.setLocalDescription(answer);\n        console.log(`emit answer to ${infoSocketRef.current}`);\n        socket.emit(\"answer\", {\n          type: \"answer\",\n          sdp: (_peerConnection$local = peerConnection.localDescription) === null || _peerConnection$local === void 0 ? void 0 : _peerConnection$local.sdp,\n          infoSocket: infoSocketRef.current\n        });\n      } catch (error) {\n        setLoading(false);\n        loadingRef.current = false;\n        console.error(\"Ошибка при установке удаленного описания предложения:\", error);\n      }\n    });\n    socket.on(\"endCall\", () => {\n      console.log(\"disconnect\");\n      setInfoSocket({});\n      infoSocketRef.current = {};\n      setLocalStream(undefined);\n      localStreamRef.current = undefined;\n    });\n    return () => {\n      localStream === null || localStream === void 0 ? void 0 : localStream.getTracks().forEach(track => track.stop());\n      socket.off(\"connection\");\n      socket.off(\"offer\");\n      socket.off(\"answer\");\n      socket.off(\"candidate\");\n      socket.off(\"endCall\");\n    };\n  }, []);\n  const getUserId = () => {\n    const id = Cookies.get(\"userIdState\");\n    if (id === undefined) {\n      alert(\"Сначала войдите в аккаунт\");\n      return;\n    }\n    setLoading(true);\n    loadingRef.current = true;\n    socket.emit(\"auth\", id);\n    setInfoSocket(prevState => {\n      return {\n        ...prevState,\n        socketID: socket.id,\n        userID: id\n      };\n    });\n    infoSocketRef.current = {\n      ...infoSocketRef.current,\n      socketID: socket.id,\n      userID: id\n    };\n    getMedia(id);\n  };\n  const getMedia = async id => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true,\n        video: false\n      });\n      console.log(\"stream\");\n      setLocalStream(stream);\n    } catch (err) {\n      setLoading(false);\n      loadingRef.current = false;\n      console.error(\"Не удалось получить доступ к микрофону\", err);\n    }\n  };\n  useEffect(() => {\n    if (infoSocket !== null && infoSocket !== void 0 && infoSocket.userID) {\n      getMedia(infoSocket.userID);\n    }\n  }, [infoSocket === null || infoSocket === void 0 ? void 0 : infoSocket.userID]);\n  useEffect(() => {\n    if (localStream && localStreamRef.current === undefined) {\n      startCall(localStream);\n      localStreamRef.current = localStream;\n    }\n  }, [localStream]);\n  useEffect(() => {\n    if (infoSocket !== null && infoSocket !== void 0 && infoSocket.isSendingOffer) {\n      createOffer();\n    }\n    sendIceCandidates();\n  }, [infoSocket === null || infoSocket === void 0 ? void 0 : infoSocket.connectedUserID]);\n  useEffect(() => {\n    peerConnection.ontrack = event => {\n      if (event.streams && event.streams[0]) {\n        remoteAudioRef.current.srcObject = event.streams[0];\n      }\n    };\n    sendIceCandidates();\n    return () => {\n      peerConnection.onicecandidate = null;\n      peerConnection.ontrack = null;\n    };\n  }, [peerConnection]);\n  const startCall = async stream => {\n    try {\n      const offer = await peerConnection.createOffer();\n      await peerConnection.setLocalDescription(offer);\n      socket.emit(\"searchForAUser\", infoSocket === null || infoSocket === void 0 ? void 0 : infoSocket.userID);\n\n      // Добавляем треки в peerConnection\n      stream.getTracks().forEach(track => {\n        peerConnection.addTrack(track, stream);\n      });\n    } catch (error) {\n      console.error(\"Ошибка создания или установки предложения.\", error);\n      setLoading(false);\n      loadingRef.current = false;\n    }\n  };\n  const createOffer = async () => {\n    const offer = await peerConnection.createOffer();\n    peerConnection.setLocalDescription(offer).then(() => {\n      var _peerConnection$local2;\n      socket.emit(\"offer\", {\n        type: \"offer\",\n        sdp: (_peerConnection$local2 = peerConnection.localDescription) === null || _peerConnection$local2 === void 0 ? void 0 : _peerConnection$local2.sdp,\n        infoSocket: infoSocketRef.current\n      });\n    });\n  };\n  const sendIceCandidates = async () => {\n    peerConnection.onicecandidate = event => {\n      if (event.candidate) {\n        var _infoSocketRef$curren;\n        //console.log(\"allmycandidates\", event.candidate);\n        socket.emit(\"candidate\", {\n          candidate: event.candidate,\n          target: (_infoSocketRef$curren = infoSocketRef.current) === null || _infoSocketRef$curren === void 0 ? void 0 : _infoSocketRef$curren.connectedUserSocketID\n        });\n      }\n    };\n  };\n  const cancelLoading = () => {\n    setLoading(false);\n    loadingRef.current = false;\n    socket.emit(\"endCall\", infoSocketRef.current);\n  };\n  const terminateCall = () => {\n    if (localStream) {\n      localStream.getTracks().forEach(track => track.stop());\n      setLocalStream(undefined);\n      localStreamRef.current = undefined;\n    }\n\n    // Закрытие текущего peerConnection и очистка слушателей событий\n    peerConnection.onicecandidate = null;\n    peerConnection.ontrack = null;\n    peerConnection.oniceconnectionstatechange = null;\n    peerConnection.onsignalingstatechange = null;\n    peerConnection.onicegatheringstatechange = null;\n    peerConnection.onnegotiationneeded = null;\n    peerConnection.close();\n\n    // Создание нового peerConnection\n    const newPeerConnection = new RTCPeerConnection(configuration);\n    setPeerconnection(newPeerConnection);\n    setLoading(false);\n    loadingRef.current = false;\n    socket.emit(\"endCall\", infoSocketRef.current);\n    setInfoSocket({});\n    infoSocketRef.current = {};\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loadingRef.current ? /*#__PURE__*/_jsxDEV(MainPageLoading, {\n      cancelLoading: cancelLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 9\n    }, this) : infoSocket !== null && infoSocket !== void 0 && infoSocket.connectedUserID ? /*#__PURE__*/_jsxDEV(MainPageConnected, {\n      localStream: localStream,\n      remoteAudioRef: remoteAudioRef,\n      terminateCall: terminateCall\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(MainPageDefault, {\n      getUserId: getUserId,\n      localStream: localStream,\n      remoteAudioRef: remoteAudioRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(MainPage, \"ZLlXqo6RpdZPa5YHBKxeEaHM/dc=\");\n_c = MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["io","useEffect","useRef","useState","Cookies","MainPageLoading","MainPageConnected","MainPageDefault","jsxDEV","_jsxDEV","Fragment","_Fragment","socket","configuration","iceServers","urls","MainPage","_s","localStream","setLocalStream","infoSocket","setInfoSocket","peerConnection","setPeerconnection","RTCPeerConnection","isLoading","setLoading","localStreamRef","undefined","infoSocketRef","loadingRef","remoteAudioRef","on","data","current","prevState","connectedUserID","userID","connectedUserSocketID","socketID","isSendingOffer","addIceCandidate","candidate","then","catch","error","console","log","answer","RTCSessionDescription","type","sdp","setRemoteDescription","offer","_peerConnection$local","createAnswer","setLocalDescription","emit","localDescription","getTracks","forEach","track","stop","off","getUserId","id","get","alert","getMedia","stream","navigator","mediaDevices","getUserMedia","audio","video","err","startCall","createOffer","sendIceCandidates","ontrack","event","streams","srcObject","onicecandidate","addTrack","_peerConnection$local2","_infoSocketRef$curren","target","cancelLoading","terminateCall","oniceconnectionstatechange","onsignalingstatechange","onicegatheringstatechange","onnegotiationneeded","close","newPeerConnection","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/goik4/Универ/corsework/Voice-Roulete-Coursework/Voice-Roulete-Coursework/roulete/client/src/routes/MainPage/MainPage.tsx"],"sourcesContent":["import io from \"socket.io-client\";\nimport { useEffect, useRef, useState } from \"react\";\nimport Cookies from \"js-cookie\";\nimport MainPageLoading from \"./MainPageLoading\";\nimport MainPageConnected from \"./MainPageConnected\";\nimport MainPageDefault from \"./MainPageDefault\";\n\nconst socket = io(\"http://localhost:5000\");\nconst configuration = {\n  iceServers: [{ urls: \"stun:stun.l.google.com:19302\" }],\n};\n\nexport default function MainPage() {\n  const [localStream, setLocalStream] = useState<MediaStream | undefined>();\n  const [infoSocket, setInfoSocket] = useState<setInfoSocket>();\n  const [peerConnection, setPeerconnection] = useState<RTCPeerConnection>(\n    new RTCPeerConnection(configuration)\n  );\n  const [isLoading, setLoading] = useState<boolean>(false);\n  //const [mediaRecorder, setMediaRecorder] = useState<MediaRecorder | undefined>(undefined)\n  //const [recordedChunks, setRecordedChunks] = useState<[]>()\n\n  const localStreamRef = useRef<MediaStream | undefined>(undefined);\n  const infoSocketRef = useRef<setInfoSocket>();\n  const loadingRef = useRef<boolean>();\n  const remoteAudioRef = useRef<HTMLAudioElement>(null);\n\n  useEffect(() => {\n    \n    socket.on(\"connection\", (data) => {\n      setLoading(false);\n      loadingRef.current = false;\n      setInfoSocket((prevState) => {\n        return {\n          ...prevState,\n          connectedUserID: data.userID,\n          connectedUserSocketID: data.socketID,\n          isSendingOffer: data.isSendingOffer,\n        };\n      });\n      infoSocketRef.current = {\n        ...infoSocketRef.current,\n        connectedUserID: data.userID,\n        connectedUserSocketID: data.socketID,\n        isSendingOffer: data.isSendingOffer,\n      };\n    });\n\n    socket.on(\"candidate\", (data) => {\n      peerConnection\n        .addIceCandidate(data.candidate)\n        .then(() => {\n          //console.log(\"added Candidate\", data.candidate, \"from \", data.sender);\n        })\n        .catch((error) => console.log(\"Ошибка установки ICE кандидата\", error));\n    });\n\n    socket.on(\"answer\", async (data) => {\n      const answer = new RTCSessionDescription({\n        type: data.type,\n        sdp: data.sdp,\n      });\n\n      try {\n        await peerConnection.setRemoteDescription(answer);\n        console.log(\"Удаленное описание ответа установлено успешно.\");\n      } catch (error) {\n        setLoading(false);\n        loadingRef.current = false;\n        console.error(\n          \"Ошибка при установке удаленного описания ответа:\",\n          error\n        );\n      }\n    });\n\n    socket.on(\"offer\", async (data) => {\n      const offer = new RTCSessionDescription({\n        type: data.type,\n        sdp: data.sdp,\n      });\n\n      try {\n        await peerConnection.setRemoteDescription(offer);\n        const answer = await peerConnection.createAnswer();\n        await peerConnection.setLocalDescription(answer);\n        console.log(`emit answer to ${infoSocketRef.current}`)\n        socket.emit(\"answer\", {\n          type: \"answer\",\n          sdp: peerConnection.localDescription?.sdp,\n          infoSocket: infoSocketRef.current,\n        });\n      } catch (error) {\n        setLoading(false);\n        loadingRef.current = false;\n        console.error(\n          \"Ошибка при установке удаленного описания предложения:\",\n          error\n        );\n      }\n    });\n\n    socket.on(\"endCall\", () => {\n      console.log(\"disconnect\");\n      setInfoSocket({});\n      infoSocketRef.current = {};\n      setLocalStream(undefined);\n      localStreamRef.current = undefined;\n    });\n\n    return () => {\n      localStream?.getTracks().forEach((track) => track.stop());\n      socket.off(\"connection\");\n      socket.off(\"offer\");\n      socket.off(\"answer\");\n      socket.off(\"candidate\");\n      socket.off(\"endCall\");\n    };\n  }, []);\n\n  const getUserId = () => {\n    const id = Cookies.get(\"userIdState\");\n    if (id === undefined) {\n      alert(\"Сначала войдите в аккаунт\");\n      return;\n    }\n    setLoading(true);\n    loadingRef.current = true;\n    socket.emit(\"auth\", id);\n    setInfoSocket((prevState) => {\n      return { ...prevState, socketID: socket.id, userID: id };\n    });\n    infoSocketRef.current = {\n      ...infoSocketRef.current,\n      socketID: socket.id,\n      userID: id,\n    };\n    getMedia(id);\n  };\n\n  \n  const getMedia = async (id: string) => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true,\n        video: false,\n      });\n      console.log(\"stream\");\n      setLocalStream(stream);\n    } catch (err) {\n      setLoading(false);\n      loadingRef.current = false;\n      console.error(\"Не удалось получить доступ к микрофону\", err);\n    }\n  };\n\n  useEffect(() => {\n    if (infoSocket?.userID) {\n      getMedia(infoSocket.userID);\n    }\n  }, [infoSocket?.userID]);\n\n  useEffect(() => {\n    if (localStream && localStreamRef.current === undefined) {\n      startCall(localStream);\n      localStreamRef.current = localStream;\n    }\n  }, [localStream]);\n\n  useEffect(() => {\n    if (infoSocket?.isSendingOffer) {\n      createOffer();\n    }\n    sendIceCandidates();\n  }, [infoSocket?.connectedUserID]);\n\n  useEffect(() => {\n    peerConnection.ontrack = (event) => {\n      if (event.streams && event.streams[0]) {\n        remoteAudioRef.current!.srcObject = event.streams[0];\n      }\n    };\n  \n    sendIceCandidates();\n  \n    return () => {\n      peerConnection.onicecandidate = null;\n      peerConnection.ontrack = null;\n    };\n  }, [peerConnection]);\n\n  const startCall = async (stream: MediaStream) => {\n    try {\n      const offer = await peerConnection.createOffer();\n      await peerConnection.setLocalDescription(offer);\n      socket.emit(\"searchForAUser\", infoSocket?.userID);\n\n      // Добавляем треки в peerConnection\n      stream.getTracks().forEach((track) => {\n        peerConnection.addTrack(track, stream);\n      });\n    } catch (error) {\n      console.error(\"Ошибка создания или установки предложения.\", error);\n      setLoading(false);\n      loadingRef.current = false;\n    }\n  };\n\n  const createOffer = async () => {\n    const offer = await peerConnection.createOffer();\n    peerConnection.setLocalDescription(offer).then(() => {\n      socket.emit(\"offer\", {\n        type: \"offer\",\n        sdp: peerConnection.localDescription?.sdp,\n        infoSocket: infoSocketRef.current,\n      });\n    });\n  };\n\n  const sendIceCandidates = async () => {\n    peerConnection.onicecandidate = (event) => {\n      if (event.candidate) {\n        //console.log(\"allmycandidates\", event.candidate);\n        socket.emit(\"candidate\", {\n          candidate: event.candidate,\n          target: infoSocketRef.current?.connectedUserSocketID,\n        });\n      }\n    };\n  };\n\n  const cancelLoading = () => {\n    setLoading(false);\n    loadingRef.current = false;\n    socket.emit(\"endCall\", infoSocketRef.current);\n  };\n\n  const terminateCall = () => {\n    if (localStream) {\n      localStream.getTracks().forEach((track) => track.stop());\n      setLocalStream(undefined);\n      localStreamRef.current = undefined;\n    }\n  \n    // Закрытие текущего peerConnection и очистка слушателей событий\n    peerConnection.onicecandidate = null;\n    peerConnection.ontrack = null;\n    peerConnection.oniceconnectionstatechange = null;\n    peerConnection.onsignalingstatechange = null;\n    peerConnection.onicegatheringstatechange = null;\n    peerConnection.onnegotiationneeded = null;\n    peerConnection.close();\n  \n    // Создание нового peerConnection\n    const newPeerConnection = new RTCPeerConnection(configuration);\n    setPeerconnection(newPeerConnection);\n  \n    setLoading(false);\n    loadingRef.current = false;\n    socket.emit(\"endCall\", infoSocketRef.current);\n    setInfoSocket({});\n    infoSocketRef.current = {};\n  };\n  \n\n  return (\n    <>\n      {loadingRef.current ? (\n        <MainPageLoading cancelLoading={cancelLoading} />\n      ) : infoSocket?.connectedUserID ? (\n        <MainPageConnected\n          localStream={localStream}\n          remoteAudioRef={remoteAudioRef}\n          terminateCall={terminateCall}\n        />\n      ) : (\n        <MainPageDefault\n          getUserId={getUserId}\n          localStream={localStream}\n          remoteAudioRef={remoteAudioRef}\n        />\n      )}\n    </>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}