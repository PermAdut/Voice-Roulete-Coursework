{"ast":null,"code":"import io from\"socket.io-client\";import axios from\"axios\";import{useEffect,useRef,useState}from\"react\";import Cookies from\"js-cookie\";import MainPageLoading from\"./MainPageLoading\";import MainPageConnected from\"./MainPageConnected\";import MainPageDefault from\"./MainPageDefault\";import MainPageDisconnected from\"./MainPageDisconnected\";import{jsx as _jsx,Fragment as _Fragment}from\"react/jsx-runtime\";const socket=io(\"https://192.168.0.114:5000\");const configuration={iceServers:[{urls:\"stun:stun.l.google.com:19302\"}]};export function MainPage(){const[localStream,setLocalStream]=useState();const[infoSocket,setInfoSocket]=useState();const[peerConnection,setPeerConnection]=useState(new RTCPeerConnection(configuration));const[isLoading,setLoading]=useState(false);const[isDisconnected,setDisconnected]=useState(false);const[mediaRecorder,setMediaRecorder]=useState(undefined);const[recordedChunks,setRecordedChunks]=useState([]);const localStreamRef=useRef(undefined);const infoSocketRef=useRef();const loadingRef=useRef();const remoteAudioRef=useRef(null);const mediaRecorderRef=useRef(undefined);useEffect(()=>{peerConnection.ontrack=event=>{if(event.streams&&event.streams[0]){remoteAudioRef.current.srcObject=event.streams[0];}};socket.on(\"connection\",data=>{console.log(localStreamRef.current);setLoading(false);startRecording(localStreamRef.current);loadingRef.current=false;setInfoSocket(prevState=>{return{...prevState,connectedUserID:data.userID,connectedUserSocketID:data.socketID,isSendingOffer:data.isSendingOffer};});infoSocketRef.current={...infoSocketRef.current,connectedUserID:data.userID,connectedUserSocketID:data.socketID,isSendingOffer:data.isSendingOffer};});socket.on(\"candidate\",data=>{peerConnection.addIceCandidate(data.candidate).then(()=>{console.log(\"added Candidate\",data.candidate,\"from \",data.sender);}).catch(error=>console.log(\"Ошибка установки ICE кандидата\",error));});socket.on(\"answer\",async data=>{const answer=new RTCSessionDescription({type:data.type,sdp:data.sdp});try{await peerConnection.setRemoteDescription(answer);console.log(\"Удаленное описание ответа установлено успешно.\");}catch(error){setLoading(false);loadingRef.current=false;console.error(\"Ошибка при установке удаленного описания ответа:\",error);}});socket.on(\"offer\",async data=>{const offer=new RTCSessionDescription({type:data.type,sdp:data.sdp});try{var _peerConnection$local;await peerConnection.setRemoteDescription(offer);const answer=await peerConnection.createAnswer();await peerConnection.setLocalDescription(answer);console.log(\"emit answer to \".concat(infoSocketRef.current));socket.emit(\"answer\",{type:\"answer\",sdp:(_peerConnection$local=peerConnection.localDescription)===null||_peerConnection$local===void 0?void 0:_peerConnection$local.sdp,infoSocket:infoSocketRef.current});}catch(error){setLoading(false);loadingRef.current=false;console.error(\"Ошибка при установке удаленного описания предложения:\",error);}});socket.on(\"endCall\",()=>{stopRecording().then(async audioBlob=>{const formData=new FormData();console.log(audioBlob);formData.append(\"audioFile\",audioBlob,\"recording.webm\");console.log(formData);try{const response=await axios.post(\"https://192.168.0.114:5000/api/files/upload_recording\",{formData:formData},{headers:{\"Content-Type\":\"multipart/form-data\"}});console.log(response.status);}catch(err){console.error(err);}});setInfoSocket({});infoSocketRef.current={};setLocalStream(undefined);localStreamRef.current=undefined;setDisconnected(true);mediaRecorder===null||mediaRecorder===void 0?void 0:mediaRecorder.stop();});return()=>{localStream===null||localStream===void 0?void 0:localStream.getTracks().forEach(track=>track.stop());mediaRecorder===null||mediaRecorder===void 0?void 0:mediaRecorder.stop();socket.off(\"connection\");socket.off(\"offer\");socket.off(\"answer\");socket.off(\"candidate\");socket.off(\"endCall\");};},[]);const getUserId=()=>{const id=Cookies.get(\"userIdState\");if(id===undefined){alert(\"Сначала войдите в аккаунт\");return;}loadingRef.current=true;socket.emit(\"auth\",id);setInfoSocket(prevState=>{return{...prevState,socketID:socket.id,userID:id};});infoSocketRef.current={...infoSocketRef.current,socketID:socket.id,userID:id};getMedia(id);};const getMedia=async id=>{try{const stream=await navigator.mediaDevices.getUserMedia({audio:true,video:false});setLoading(true);setLocalStream(stream);}catch(err){setLoading(false);loadingRef.current=false;console.error(\"Не удалось получить доступ к микрофону\",err);}};useEffect(()=>{if(infoSocket!==null&&infoSocket!==void 0&&infoSocket.userID){getMedia(infoSocket.userID);}},[infoSocket===null||infoSocket===void 0?void 0:infoSocket.userID]);useEffect(()=>{if(localStream&&localStreamRef.current===undefined){startCall(localStream);localStreamRef.current=localStream;}},[localStream]);useEffect(()=>{if(infoSocket!==null&&infoSocket!==void 0&&infoSocket.isSendingOffer){createOffer();}sendIceCandidates();},[infoSocket===null||infoSocket===void 0?void 0:infoSocket.connectedUserID]);const startCall=async stream=>{try{const offer=await peerConnection.createOffer();await peerConnection.setLocalDescription(offer);socket.emit(\"searchForAUser\",infoSocket===null||infoSocket===void 0?void 0:infoSocket.userID);// Добавляем треки в peerConnection\nstream.getTracks().forEach(track=>{console.log(\"track\");peerConnection.addTrack(track,stream);});}catch(error){console.error(\"Ошибка создания или установки предложения.\",error);setLoading(false);loadingRef.current=false;}};const createOffer=async()=>{const offer=await peerConnection.createOffer();peerConnection.setLocalDescription(offer).then(()=>{var _peerConnection$local2;socket.emit(\"offer\",{type:\"offer\",sdp:(_peerConnection$local2=peerConnection.localDescription)===null||_peerConnection$local2===void 0?void 0:_peerConnection$local2.sdp,infoSocket:infoSocketRef.current});});};const sendIceCandidates=async()=>{peerConnection.onicecandidate=event=>{if(event.candidate){var _infoSocketRef$curren;socket.emit(\"candidate\",{candidate:event.candidate,target:(_infoSocketRef$curren=infoSocketRef.current)===null||_infoSocketRef$curren===void 0?void 0:_infoSocketRef$curren.connectedUserSocketID});}};};const startRecording=stream=>{if(stream){const mediaRecorderInstance=new MediaRecorder(stream);mediaRecorderRef.current=mediaRecorderInstance;mediaRecorderInstance.ondataavailable=event=>{console.log(event.data.size,event.data);if(event.data.size>0){setRecordedChunks(prev=>[...prev,event.data]);console.log('here');}};mediaRecorderInstance.start();setMediaRecorder(mediaRecorderInstance);console.log(\"Recording started\");}};const stopRecording=()=>{return new Promise(resolve=>{if(mediaRecorderRef.current){mediaRecorderRef.current.onstop=()=>{console.log(recordedChunks);const audioBlob=new Blob(recordedChunks,{type:\"audio/webm\"});resolve(audioBlob);};mediaRecorderRef.current.stop();console.log(\"Recording stopped\");}});};const cancelLoading=()=>{setLoading(false);loadingRef.current=false;socket.emit(\"endCall\",infoSocketRef.current);};const terminateCall=()=>{if(localStream){localStream.getTracks().forEach(track=>{track.stop();});setLocalStream(undefined);localStreamRef.current=undefined;}if(peerConnection){peerConnection.setLocalDescription(undefined);}setLoading(false);loadingRef.current=false;socket.emit(\"endCall\",infoSocketRef.current);setDisconnected(true);setInfoSocket({});infoSocketRef.current={};};return/*#__PURE__*/_jsx(_Fragment,{children:isDisconnected?/*#__PURE__*/_jsx(MainPageDisconnected,{returnBack:setDisconnected}):loadingRef.current?/*#__PURE__*/_jsx(MainPageLoading,{cancelLoading:cancelLoading}):infoSocket!==null&&infoSocket!==void 0&&infoSocket.connectedUserID?/*#__PURE__*/_jsx(MainPageConnected,{localStream:localStream,remoteAudioRef:remoteAudioRef,terminateCall:terminateCall}):/*#__PURE__*/_jsx(MainPageDefault,{getUserId:getUserId,localStream:localStream,remoteAudioRef:remoteAudioRef})});}","map":{"version":3,"names":["io","axios","useEffect","useRef","useState","Cookies","MainPageLoading","MainPageConnected","MainPageDefault","MainPageDisconnected","jsx","_jsx","Fragment","_Fragment","socket","configuration","iceServers","urls","MainPage","localStream","setLocalStream","infoSocket","setInfoSocket","peerConnection","setPeerConnection","RTCPeerConnection","isLoading","setLoading","isDisconnected","setDisconnected","mediaRecorder","setMediaRecorder","undefined","recordedChunks","setRecordedChunks","localStreamRef","infoSocketRef","loadingRef","remoteAudioRef","mediaRecorderRef","ontrack","event","streams","current","srcObject","on","data","console","log","startRecording","prevState","connectedUserID","userID","connectedUserSocketID","socketID","isSendingOffer","addIceCandidate","candidate","then","sender","catch","error","answer","RTCSessionDescription","type","sdp","setRemoteDescription","offer","_peerConnection$local","createAnswer","setLocalDescription","concat","emit","localDescription","stopRecording","audioBlob","formData","FormData","append","response","post","headers","status","err","stop","getTracks","forEach","track","off","getUserId","id","get","alert","getMedia","stream","navigator","mediaDevices","getUserMedia","audio","video","startCall","createOffer","sendIceCandidates","addTrack","_peerConnection$local2","onicecandidate","_infoSocketRef$curren","target","mediaRecorderInstance","MediaRecorder","ondataavailable","size","prev","start","Promise","resolve","onstop","Blob","cancelLoading","terminateCall","children","returnBack"],"sources":["/home/goik4/Универ/corsework/Voice-Roulete-Coursework/Voice-Roulete-Coursework/roulete/client/src/routes/MainPage/MainPage.tsx"],"sourcesContent":["import io from \"socket.io-client\";\nimport axios from \"axios\";\nimport { useEffect, useRef, useState } from \"react\";\nimport Cookies from \"js-cookie\";\nimport MainPageLoading from \"./MainPageLoading\";\nimport MainPageConnected from \"./MainPageConnected\";\nimport MainPageDefault from \"./MainPageDefault\";\nimport MainPageDisconnected from \"./MainPageDisconnected\";\n\nconst socket = io(\"https://192.168.0.114:5000\");\nconst configuration = {\n  iceServers: [{ urls: \"stun:stun.l.google.com:19302\" }],\n};\n\nexport function MainPage() {\n  const [localStream, setLocalStream] = useState<LocalStream>();\n  const [infoSocket, setInfoSocket] = useState<setInfoSocket>();\n  const [peerConnection, setPeerConnection] = useState<RTCPeerConnection>(\n    new RTCPeerConnection(configuration)\n  );\n  const [isLoading, setLoading] = useState<boolean>(false);\n  const [isDisconnected, setDisconnected] = useState<boolean>(false);\n  const [mediaRecorder, setMediaRecorder] = useState<LocalRecorder>(\n    undefined\n  );\n  const [recordedChunks, setRecordedChunks] = useState<BlobPart[]>([]);\n\n  const localStreamRef = useRef<LocalStream>(undefined);\n  const infoSocketRef = useRef<setInfoSocket>();\n  const loadingRef = useRef<boolean>();\n  const remoteAudioRef = useRef<HTMLAudioElement>(null);\n  const mediaRecorderRef = useRef<LocalRecorder>(undefined);\n\n\n  useEffect(() => {\n    peerConnection.ontrack = (event) => {\n      if (event.streams && event.streams[0]) {\n        remoteAudioRef.current!.srcObject = event.streams[0];\n      }\n    };\n\n    socket.on(\"connection\", (data) => {\n      console.log(localStreamRef.current)\n      setLoading(false);\n      startRecording(localStreamRef.current);\n      loadingRef.current = false;\n      setInfoSocket((prevState) => {\n        return {\n          ...prevState,\n          connectedUserID: data.userID,\n          connectedUserSocketID: data.socketID,\n          isSendingOffer: data.isSendingOffer,\n        };\n      });\n      infoSocketRef.current = {\n        ...infoSocketRef.current,\n        connectedUserID: data.userID,\n        connectedUserSocketID: data.socketID,\n        isSendingOffer: data.isSendingOffer,\n      };\n    });\n\n    socket.on(\"candidate\", (data) => {\n      peerConnection\n        .addIceCandidate(data.candidate)\n        .then(() => {\n          console.log(\"added Candidate\", data.candidate, \"from \", data.sender);\n        })\n        .catch((error) => console.log(\"Ошибка установки ICE кандидата\", error));\n    });\n\n    socket.on(\"answer\", async (data) => {\n      const answer = new RTCSessionDescription({\n        type: data.type,\n        sdp: data.sdp,\n      });\n\n      try {\n        await peerConnection.setRemoteDescription(answer);\n        console.log(\"Удаленное описание ответа установлено успешно.\");\n      } catch (error) {\n        setLoading(false);\n        loadingRef.current = false;\n        console.error(\n          \"Ошибка при установке удаленного описания ответа:\",\n          error\n        );\n      }\n    });\n\n    socket.on(\"offer\", async (data) => {\n      const offer = new RTCSessionDescription({\n        type: data.type,\n        sdp: data.sdp,\n      });\n\n      try {\n        await peerConnection.setRemoteDescription(offer);\n        const answer = await peerConnection.createAnswer();\n        await peerConnection.setLocalDescription(answer);\n        console.log(`emit answer to ${infoSocketRef.current}`);\n        socket.emit(\"answer\", {\n          type: \"answer\",\n          sdp: peerConnection.localDescription?.sdp,\n          infoSocket: infoSocketRef.current,\n        });\n      } catch (error) {\n        setLoading(false);\n        loadingRef.current = false;\n        console.error(\n          \"Ошибка при установке удаленного описания предложения:\",\n          error\n        );\n      }\n    });\n\n    socket.on(\"endCall\", () => {\n      stopRecording().then(async (audioBlob) => {\n        const formData = new FormData();\n        console.log(audioBlob);\n        formData.append(\"audioFile\", audioBlob, \"recording.webm\");\n        console.log(formData);\n        try {\n          const response = await axios.post(\n            \"https://192.168.0.114:5000/api/files/upload_recording\",\n            { formData: formData },\n            {\n              headers: {\n                \"Content-Type\": \"multipart/form-data\",\n              },\n            }\n          );\n          console.log(response.status);\n        } catch (err) {\n          console.error(err);\n        }\n      });\n      setInfoSocket({});\n      infoSocketRef.current = {};\n      setLocalStream(undefined);\n      localStreamRef.current = undefined;\n      setDisconnected(true);\n      mediaRecorder?.stop();\n    });\n\n    return () => {\n      localStream?.getTracks().forEach((track) => track.stop());\n      mediaRecorder?.stop();\n      socket.off(\"connection\");\n      socket.off(\"offer\");\n      socket.off(\"answer\");\n      socket.off(\"candidate\");\n      socket.off(\"endCall\");\n    };\n  }, []);\n\n  const getUserId = () => {\n    const id = Cookies.get(\"userIdState\");\n    if (id === undefined) {\n      alert(\"Сначала войдите в аккаунт\");\n      return;\n    }\n    loadingRef.current = true;\n    socket.emit(\"auth\", id);\n    setInfoSocket((prevState) => {\n      return { ...prevState, socketID: socket.id, userID: id };\n    });\n    infoSocketRef.current = {\n      ...infoSocketRef.current,\n      socketID: socket.id,\n      userID: id,\n    };\n    getMedia(id);\n  };\n\n  const getMedia = async (id: string) => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true,\n        video: false,\n      });\n      setLoading(true);\n      setLocalStream(stream);\n    } catch (err) {\n      setLoading(false);\n      loadingRef.current = false;\n      console.error(\"Не удалось получить доступ к микрофону\", err);\n    }\n  };\n\n  useEffect(() => {\n    if (infoSocket?.userID) {\n      getMedia(infoSocket.userID);\n    }\n  }, [infoSocket?.userID]);\n\n  useEffect(() => {\n    if (localStream && localStreamRef.current === undefined) {\n      startCall(localStream);\n      localStreamRef.current = localStream;\n    }\n  }, [localStream]);\n\n  useEffect(() => {\n    if (infoSocket?.isSendingOffer) {\n      createOffer();\n    }\n    sendIceCandidates();\n  }, [infoSocket?.connectedUserID]);\n\n  const startCall = async (stream: MediaStream) => {\n    try {\n      const offer = await peerConnection.createOffer();\n      await peerConnection.setLocalDescription(offer);\n      socket.emit(\"searchForAUser\", infoSocket?.userID);\n\n      // Добавляем треки в peerConnection\n      stream.getTracks().forEach((track) => {\n        console.log(\"track\");\n        peerConnection.addTrack(track, stream);\n      });\n    } catch (error) {\n      console.error(\"Ошибка создания или установки предложения.\", error);\n      setLoading(false);\n      loadingRef.current = false;\n    }\n  };\n\n  const createOffer = async () => {\n    const offer = await peerConnection.createOffer();\n    peerConnection.setLocalDescription(offer).then(() => {\n      socket.emit(\"offer\", {\n        type: \"offer\",\n        sdp: peerConnection.localDescription?.sdp,\n        infoSocket: infoSocketRef.current,\n      });\n    });\n  };\n\n  const sendIceCandidates = async () => {\n    peerConnection.onicecandidate = (event) => {\n      if (event.candidate) {\n        socket.emit(\"candidate\", {\n          candidate: event.candidate,\n          target: infoSocketRef.current?.connectedUserSocketID,\n        });\n      }\n    };\n  };\n\n  const startRecording = (stream: LocalStream) => {\n    if (stream) {\n      const mediaRecorderInstance = new MediaRecorder(stream);\n      mediaRecorderRef.current = mediaRecorderInstance;\n      \n      mediaRecorderInstance.ondataavailable = (event) => {\n        console.log(event.data.size, event.data)\n        if (event.data.size > 0) {\n          setRecordedChunks((prev) => [...prev, event.data]);\n          console.log('here');\n        }\n      };\n  \n      mediaRecorderInstance.start();\n      setMediaRecorder(mediaRecorderInstance);\n      console.log(\"Recording started\");\n    }\n  };\n  \n  const stopRecording = () => {\n    return new Promise<Blob>((resolve) => {\n      if (mediaRecorderRef.current) {\n        mediaRecorderRef.current!.onstop = () => {\n          console.log(recordedChunks)\n          const audioBlob = new Blob(recordedChunks, { type: \"audio/webm\" });\n          resolve(audioBlob);\n        };\n        mediaRecorderRef.current!.stop();\n        console.log(\"Recording stopped\");\n      }\n    });\n  };\n\n  const cancelLoading = () => {\n    setLoading(false);\n    loadingRef.current = false;\n    socket.emit(\"endCall\", infoSocketRef.current);\n  };\n\n  const terminateCall = () => {\n    if (localStream) {\n      localStream.getTracks().forEach((track) => {\n        track.stop();\n      });\n      setLocalStream(undefined);\n      localStreamRef.current = undefined;\n    }\n    if (peerConnection) {\n      peerConnection.setLocalDescription(undefined);\n    }\n    setLoading(false);\n    loadingRef.current = false;\n    socket.emit(\"endCall\", infoSocketRef.current);\n    setDisconnected(true);\n    setInfoSocket({});\n    infoSocketRef.current = {};\n  };\n\n  return (\n    <>\n      {isDisconnected ? (\n        <MainPageDisconnected returnBack={setDisconnected} />\n      ) : loadingRef.current ? (\n        <MainPageLoading cancelLoading={cancelLoading} />\n      ) : infoSocket?.connectedUserID ? (\n        <MainPageConnected\n          localStream={localStream}\n          remoteAudioRef={remoteAudioRef}\n          terminateCall={terminateCall}\n        />\n      ) : (\n        <MainPageDefault\n          getUserId={getUserId}\n          localStream={localStream}\n          remoteAudioRef={remoteAudioRef}\n        />\n      )}\n    </>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}