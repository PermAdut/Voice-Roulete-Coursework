{"ast":null,"code":"import io from\"socket.io-client\";import{useEffect,useRef,useState}from\"react\";import Cookies from\"js-cookie\";import MainPageLoading from\"./MainPageLoading\";import MainPageConnected from\"./MainPageConnected\";import MainPageDefault from\"./MainPageDefault\";import MainPageDisconnected from\"./MainPageDisconnected\";import{jsx as _jsx,Fragment as _Fragment}from\"react/jsx-runtime\";const socket=io(\"https://192.168.0.114:5000\");const configuration={iceServers:[{urls:\"stun:stun.l.google.com:19302\"}]};export default function MainPage(){const[localStream,setLocalStream]=useState();const[infoSocket,setInfoSocket]=useState();const[peerConnection,setPeerconnection]=useState(null);const[isLoading,setLoading]=useState(false);const[isDisconnected,setDisconnected]=useState(false);const[mediaRecorder,setMediaRecorder]=useState(undefined);const[recordedChunks,setRecordedChunks]=useState([]);const localStreamRef=useRef(undefined);const infoSocketRef=useRef();const loadingRef=useRef();const remoteAudioRef=useRef(null);useEffect(()=>{peerConnection.ontrack=event=>{if(event.streams&&event.streams[0]){remoteAudioRef.current.srcObject=event.streams[0];}};socket.on(\"connection\",data=>{setLoading(false);loadingRef.current=false;setInfoSocket(prevState=>{return{...prevState,connectedUserID:data.userID,connectedUserSocketID:data.socketID,isSendingOffer:data.isSendingOffer};});infoSocketRef.current={...infoSocketRef.current,connectedUserID:data.userID,connectedUserSocketID:data.socketID,isSendingOffer:data.isSendingOffer};});socket.on(\"candidate\",data=>{peerConnection.addIceCandidate(data.candidate).then(()=>{console.log(\"added Candidate\",data.candidate,\"from \",data.sender);}).catch(error=>console.log(\"Ошибка установки ICE кандидата\",error));});socket.on(\"answer\",async data=>{const answer=new RTCSessionDescription({type:data.type,sdp:data.sdp});try{await peerConnection.setRemoteDescription(answer);console.log(\"Удаленное описание ответа установлено успешно.\");}catch(error){setLoading(false);loadingRef.current=false;console.error(\"Ошибка при установке удаленного описания ответа:\",error);}});socket.on(\"offer\",async data=>{const offer=new RTCSessionDescription({type:data.type,sdp:data.sdp});try{var _localDescription;await peerConnection.setRemoteDescription(offer);const answer=await peerConnection.createAnswer();await peerConnection.setLocalDescription(answer);console.log(\"emit answer to \".concat(infoSocketRef.current));socket.emit(\"answer\",{type:\"answer\",sdp:(_localDescription=peerConnection.localDescription)===null||_localDescription===void 0?void 0:_localDescription.sdp,infoSocket:infoSocketRef.current});}catch(error){setLoading(false);loadingRef.current=false;console.error(\"Ошибка при установке удаленного описания предложения:\",error);}});socket.on(\"endCall\",()=>{console.log(\"disconnect\");setInfoSocket({});infoSocketRef.current={};setLocalStream(undefined);localStreamRef.current=undefined;setDisconnected(true);mediaRecorder===null||mediaRecorder===void 0?void 0:mediaRecorder.stop();});return()=>{localStream===null||localStream===void 0?void 0:localStream.getTracks().forEach(track=>track.stop());mediaRecorder===null||mediaRecorder===void 0?void 0:mediaRecorder.stop();socket.off(\"connection\");socket.off(\"offer\");socket.off(\"answer\");socket.off(\"candidate\");socket.off(\"endCall\");};},[]);const getUserId=()=>{const id=Cookies.get(\"userIdState\");if(id===undefined){alert(\"Сначала войдите в аккаунт\");return;}setLoading(true);loadingRef.current=true;socket.emit(\"auth\",id);setInfoSocket(prevState=>{return{...prevState,socketID:socket.id,userID:id};});infoSocketRef.current={...infoSocketRef.current,socketID:socket.id,userID:id};getMedia(id);};const getMedia=async id=>{try{const stream=await navigator.mediaDevices.getUserMedia({audio:true,video:false});console.log(\"stream\");setPeerconnection(new RTCPeerConnection(configuration));setLocalStream(stream);}catch(err){setLoading(false);loadingRef.current=false;console.error(\"Не удалось получить доступ к микрофону\",err);}};useEffect(()=>{if(infoSocket!==null&&infoSocket!==void 0&&infoSocket.userID){getMedia(infoSocket.userID);}},[infoSocket===null||infoSocket===void 0?void 0:infoSocket.userID]);useEffect(()=>{if(localStream&&localStreamRef.current===undefined){startCall(localStream);localStreamRef.current=localStream;}},[localStream]);// useEffect(() => {\n//   if (localStream && !mediaRecorder) {\n//     const newMediaRecorder = new MediaRecorder(localStream);\n//     newMediaRecorder.ondataavailable = (event) => {\n//       if (event.data.size > 0) {\n//         setRecordedChunks((prev) => [...prev, event.data]);\n//       }\n//     };\n//     newMediaRecorder.onstop = () => {\n//       const blob = new Blob(recordedChunks, { type: \"audio/webm\" });\n//       saveRecordingToServer(blob);\n//       setRecordedChunks([]);\n//     };\n//     setMediaRecorder(newMediaRecorder);\n//     newMediaRecorder.start();\n//     return () => {\n//       newMediaRecorder.stop();\n//       setMediaRecorder(undefined);\n//     };\n//   }\n// }, [localStream]);\nuseEffect(()=>{if(infoSocket!==null&&infoSocket!==void 0&&infoSocket.isSendingOffer){createOffer();}sendIceCandidates();},[infoSocket===null||infoSocket===void 0?void 0:infoSocket.connectedUserID]);const startCall=async stream=>{try{const offer=await peerConnection.createOffer();await peerConnection.setLocalDescription(offer);socket.emit(\"searchForAUser\",infoSocket===null||infoSocket===void 0?void 0:infoSocket.userID);// Добавляем треки в peerConnection\nstream.getTracks().forEach(track=>{console.log(\"track\");peerConnection.addTrack(track,stream);});}catch(error){console.error(\"Ошибка создания или установки предложения.\",error);setLoading(false);loadingRef.current=false;}};const createOffer=async()=>{const offer=await peerConnection.createOffer();peerConnection.setLocalDescription(offer).then(()=>{var _localDescription2;socket.emit(\"offer\",{type:\"offer\",sdp:(_localDescription2=peerConnection.localDescription)===null||_localDescription2===void 0?void 0:_localDescription2.sdp,infoSocket:infoSocketRef.current});});};const sendIceCandidates=async()=>{peerConnection.onicecandidate=event=>{if(event.candidate){var _infoSocketRef$curren;socket.emit(\"candidate\",{candidate:event.candidate,target:(_infoSocketRef$curren=infoSocketRef.current)===null||_infoSocketRef$curren===void 0?void 0:_infoSocketRef$curren.connectedUserSocketID});}};};const cancelLoading=()=>{setLoading(false);loadingRef.current=false;socket.emit(\"endCall\",infoSocketRef.current);};// const saveRecordingToServer = async (blob:Blob) => {\n//   try {\n//     const formData = new FormData();\n//     //formData.append('file', blob, `firstId=${socket.id}secondId=${infoSocket?.connectedUserID}.webm`); \n//     formData.append('file', blob, `rec.webm`); \n//     const response = await axios.post(\"https://192.168.0.114:5000/api/files/upload_recording\", formData, {\n//       headers: {\n//         'Content-Type': 'multipart/form-data',\n//       },\n//     });\n//     console.log('File saved:', response.data);\n//   } catch (error) {\n//     console.error('Error saving file:', error);\n//   }\n// };\nconst terminateCall=()=>{if(localStream){localStream.getTracks().forEach(track=>{track.stop();});setLocalStream(undefined);localStreamRef.current=undefined;}if(peerConnection){peerConnection.onicecandidate=null;peerConnection.ontrack=null;peerConnection.oniceconnectionstatechange=null;peerConnection.onsignalingstatechange=null;peerConnection.onicegatheringstatechange=null;peerConnection.onnegotiationneeded=null;peerConnection.close();setPeerconnection(null);}setLoading(false);loadingRef.current=false;socket.emit(\"endCall\",infoSocketRef.current);setDisconnected(true);setInfoSocket({});infoSocketRef.current={};};return/*#__PURE__*/_jsx(_Fragment,{children:isDisconnected?/*#__PURE__*/_jsx(MainPageDisconnected,{returnBack:setDisconnected}):loadingRef.current?/*#__PURE__*/_jsx(MainPageLoading,{cancelLoading:cancelLoading}):infoSocket!==null&&infoSocket!==void 0&&infoSocket.connectedUserID?/*#__PURE__*/_jsx(MainPageConnected,{localStream:localStream,remoteAudioRef:remoteAudioRef,terminateCall:terminateCall}):/*#__PURE__*/_jsx(MainPageDefault,{getUserId:getUserId,localStream:localStream,remoteAudioRef:remoteAudioRef})});}","map":{"version":3,"names":["io","useEffect","useRef","useState","Cookies","MainPageLoading","MainPageConnected","MainPageDefault","MainPageDisconnected","jsx","_jsx","Fragment","_Fragment","socket","configuration","iceServers","urls","MainPage","localStream","setLocalStream","infoSocket","setInfoSocket","peerConnection","setPeerconnection","isLoading","setLoading","isDisconnected","setDisconnected","mediaRecorder","setMediaRecorder","undefined","recordedChunks","setRecordedChunks","localStreamRef","infoSocketRef","loadingRef","remoteAudioRef","ontrack","event","streams","current","srcObject","on","data","prevState","connectedUserID","userID","connectedUserSocketID","socketID","isSendingOffer","addIceCandidate","candidate","then","console","log","sender","catch","error","answer","RTCSessionDescription","type","sdp","setRemoteDescription","offer","_localDescription","createAnswer","setLocalDescription","concat","emit","localDescription","stop","getTracks","forEach","track","off","getUserId","id","get","alert","getMedia","stream","navigator","mediaDevices","getUserMedia","audio","video","RTCPeerConnection","err","startCall","createOffer","sendIceCandidates","addTrack","_localDescription2","onicecandidate","_infoSocketRef$curren","target","cancelLoading","terminateCall","oniceconnectionstatechange","onsignalingstatechange","onicegatheringstatechange","onnegotiationneeded","close","children","returnBack"],"sources":["/home/goik4/Универ/corsework/Voice-Roulete-Coursework/Voice-Roulete-Coursework/roulete/client/src/routes/MainPage/MainPage.tsx"],"sourcesContent":["import io from \"socket.io-client\";\nimport axios from \"axios\";\nimport { useEffect, useRef, useState } from \"react\";\nimport Cookies from \"js-cookie\";\nimport MainPageLoading from \"./MainPageLoading\";\nimport MainPageConnected from \"./MainPageConnected\";\nimport MainPageDefault from \"./MainPageDefault\";\nimport MainPageDisconnected from \"./MainPageDisconnected\";\n\nconst socket = io(\"https://192.168.0.114:5000\");\nconst configuration = {\n  iceServers: [{ urls: \"stun:stun.l.google.com:19302\" }],\n};\n\nexport default function MainPage() {\n  const [localStream, setLocalStream] = useState<MediaStream | undefined>();\n  const [infoSocket, setInfoSocket] = useState<setInfoSocket>();\n  const [peerConnection, setPeerconnection] = useState<RTCPeerConnection | null>(\n    null\n  );\n  const [isLoading, setLoading] = useState<boolean>(false);\n  const [isDisconnected, setDisconnected] = useState<boolean>(false);\n  const [mediaRecorder, setMediaRecorder] = useState<MediaRecorder | undefined>(undefined)\n  const [recordedChunks, setRecordedChunks] = useState<BlobPart[]>([])\n\n  const localStreamRef = useRef<MediaStream | undefined>(undefined);\n  const infoSocketRef = useRef<setInfoSocket>();\n  const loadingRef = useRef<boolean>();\n  const remoteAudioRef = useRef<HTMLAudioElement>(null);\n\n  useEffect(() => {\n    peerConnection!.ontrack = (event) => {\n      if (event.streams && event.streams[0]) {\n        remoteAudioRef.current!.srcObject = event.streams[0];\n      }\n    };\n\n    socket.on(\"connection\", (data) => {\n      setLoading(false);\n      loadingRef.current = false;\n      setInfoSocket((prevState) => {\n        return {\n          ...prevState,\n          connectedUserID: data.userID,\n          connectedUserSocketID: data.socketID,\n          isSendingOffer: data.isSendingOffer,\n        };\n      });\n      infoSocketRef.current = {\n        ...infoSocketRef.current,\n        connectedUserID: data.userID,\n        connectedUserSocketID: data.socketID,\n        isSendingOffer: data.isSendingOffer,\n      };\n    });\n\n    socket.on(\"candidate\", (data) => {\n      peerConnection!\n        .addIceCandidate(data.candidate)\n        .then(() => {\n          console.log(\"added Candidate\", data.candidate, \"from \", data.sender);\n        })\n        .catch((error) => console.log(\"Ошибка установки ICE кандидата\", error));\n    });\n\n    socket.on(\"answer\", async (data) => {\n      const answer = new RTCSessionDescription({\n        type: data.type,\n        sdp: data.sdp,\n      });\n\n      try {\n        await peerConnection!.setRemoteDescription(answer);\n        console.log(\"Удаленное описание ответа установлено успешно.\");\n      } catch (error) {\n        setLoading(false);\n        loadingRef.current = false;\n        console.error(\n          \"Ошибка при установке удаленного описания ответа:\",\n          error\n        );\n      }\n    });\n\n    socket.on(\"offer\", async (data) => {\n      const offer = new RTCSessionDescription({\n        type: data.type,\n        sdp: data.sdp,\n      });\n\n      try {\n        await peerConnection!.setRemoteDescription(offer);\n        const answer = await peerConnection!.createAnswer();\n        await peerConnection!.setLocalDescription(answer);\n        console.log(`emit answer to ${infoSocketRef.current}`);\n        socket.emit(\"answer\", {\n          type: \"answer\",\n          sdp: peerConnection!.localDescription?.sdp,\n          infoSocket: infoSocketRef.current,\n        });\n      } catch (error) {\n        setLoading(false);\n        loadingRef.current = false;\n        console.error(\n          \"Ошибка при установке удаленного описания предложения:\",\n          error\n        );\n      }\n    });\n\n    socket.on(\"endCall\", () => {\n      console.log(\"disconnect\");\n      setInfoSocket({});\n      infoSocketRef.current = {};\n      setLocalStream(undefined);\n      localStreamRef.current = undefined;\n      setDisconnected(true)\n      mediaRecorder?.stop();\n    });\n\n    return () => {\n      localStream?.getTracks().forEach((track) => track.stop());\n      mediaRecorder?.stop();\n      socket.off(\"connection\");\n      socket.off(\"offer\");\n      socket.off(\"answer\");\n      socket.off(\"candidate\");\n      socket.off(\"endCall\");\n    };\n  }, []);\n\n  const getUserId = () => {\n    const id = Cookies.get(\"userIdState\");\n    if (id === undefined) {\n      alert(\"Сначала войдите в аккаунт\");\n      return;\n    }\n    setLoading(true);\n    loadingRef.current = true;\n    socket.emit(\"auth\", id);\n    setInfoSocket((prevState) => {\n      return { ...prevState, socketID: socket.id, userID: id };\n    });\n    infoSocketRef.current = {\n      ...infoSocketRef.current,\n      socketID: socket.id,\n      userID: id,\n    };\n    getMedia(id);\n  };\n\n  const getMedia = async (id: string) => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true,\n        video: false,\n      });\n      console.log(\"stream\");\n      setPeerconnection(new RTCPeerConnection(configuration));\n      setLocalStream(stream);\n    } catch (err) {\n      setLoading(false);\n      loadingRef.current = false;\n      console.error(\"Не удалось получить доступ к микрофону\", err);\n    }\n  };\n\n  useEffect(() => {\n    if (infoSocket?.userID) {\n      getMedia(infoSocket.userID);\n    }\n  }, [infoSocket?.userID]);\n\n  useEffect(() => {\n    if (localStream && localStreamRef.current === undefined) {\n      startCall(localStream);\n      localStreamRef.current = localStream;\n    }\n  }, [localStream]);\n\n  // useEffect(() => {\n  //   if (localStream && !mediaRecorder) {\n  //     const newMediaRecorder = new MediaRecorder(localStream);\n  \n  //     newMediaRecorder.ondataavailable = (event) => {\n  //       if (event.data.size > 0) {\n  //         setRecordedChunks((prev) => [...prev, event.data]);\n  //       }\n  //     };\n  \n  //     newMediaRecorder.onstop = () => {\n  //       const blob = new Blob(recordedChunks, { type: \"audio/webm\" });\n  //       saveRecordingToServer(blob);\n  //       setRecordedChunks([]);\n  //     };\n  \n  //     setMediaRecorder(newMediaRecorder);\n  //     newMediaRecorder.start();\n  \n  //     return () => {\n  //       newMediaRecorder.stop();\n  //       setMediaRecorder(undefined);\n  //     };\n  //   }\n  // }, [localStream]);\n  \n\n  useEffect(() => {\n    if (infoSocket?.isSendingOffer) {\n      createOffer();\n    }\n    sendIceCandidates();\n  }, [infoSocket?.connectedUserID]);\n\n  const startCall = async (stream: MediaStream) => {\n    try {\n      const offer = await peerConnection!.createOffer();\n      await peerConnection!.setLocalDescription(offer);\n      socket.emit(\"searchForAUser\", infoSocket?.userID);\n\n      // Добавляем треки в peerConnection\n      stream.getTracks().forEach((track) => {\n        console.log(\"track\");\n        peerConnection!.addTrack(track, stream);\n      });\n    } catch (error) {\n      console.error(\"Ошибка создания или установки предложения.\", error);\n      setLoading(false);\n      loadingRef.current = false;\n    }\n  };\n\n  const createOffer = async () => {\n    const offer = await peerConnection!.createOffer();\n    peerConnection!.setLocalDescription(offer).then(() => {\n      socket.emit(\"offer\", {\n        type: \"offer\",\n        sdp: peerConnection!.localDescription?.sdp,\n        infoSocket: infoSocketRef.current,\n      });\n    });\n  };\n\n  const sendIceCandidates = async () => {\n    peerConnection!.onicecandidate = (event) => {\n      if (event.candidate) {\n        socket.emit(\"candidate\", {\n          candidate: event.candidate,\n          target: infoSocketRef.current?.connectedUserSocketID,\n        });\n      }\n    };\n  };\n\n  const cancelLoading = () => {\n    setLoading(false);\n    loadingRef.current = false;\n    socket.emit(\"endCall\", infoSocketRef.current);\n  };\n\n  // const saveRecordingToServer = async (blob:Blob) => {\n  //   try {\n  //     const formData = new FormData();\n  //     //formData.append('file', blob, `firstId=${socket.id}secondId=${infoSocket?.connectedUserID}.webm`); \n  //     formData.append('file', blob, `rec.webm`); \n  //     const response = await axios.post(\"https://192.168.0.114:5000/api/files/upload_recording\", formData, {\n  //       headers: {\n  //         'Content-Type': 'multipart/form-data',\n  //       },\n  //     });\n  \n  //     console.log('File saved:', response.data);\n  //   } catch (error) {\n  //     console.error('Error saving file:', error);\n  //   }\n  // };\n\n  const terminateCall = () => {\n    if (localStream) {\n      localStream.getTracks().forEach((track) => {\n        track.stop();\n      });\n      setLocalStream(undefined);\n      localStreamRef.current = undefined;\n    }\n\n    if (peerConnection) {\n      peerConnection.onicecandidate = null;\n      peerConnection.ontrack = null;\n      peerConnection.oniceconnectionstatechange = null;\n      peerConnection.onsignalingstatechange = null;\n      peerConnection.onicegatheringstatechange = null;\n      peerConnection.onnegotiationneeded = null;\n      peerConnection.close();\n      setPeerconnection(null);\n    }\n    setLoading(false);\n    loadingRef.current = false;\n    socket.emit(\"endCall\", infoSocketRef.current);\n    setDisconnected(true);\n    setInfoSocket({});\n    infoSocketRef.current = {};\n  };\n\n  return (\n    <>\n      {isDisconnected ? (\n        <MainPageDisconnected returnBack={setDisconnected} />\n      ) : loadingRef.current ? (\n        <MainPageLoading cancelLoading={cancelLoading} />\n      ) : infoSocket?.connectedUserID ? (\n        <MainPageConnected\n          localStream={localStream}\n          remoteAudioRef={remoteAudioRef}\n          terminateCall={terminateCall}\n        />\n      ) : (\n        <MainPageDefault\n          getUserId={getUserId}\n          localStream={localStream}\n          remoteAudioRef={remoteAudioRef}\n        />\n      )}\n    </>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}