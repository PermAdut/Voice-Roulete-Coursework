{"ast":null,"code":"var _jsxFileName = \"/home/goik4/\\u0423\\u043D\\u0438\\u0432\\u0435\\u0440/corsework/Voice-Roulete-Coursework/Voice-Roulete-Coursework/roulete/client/src/routes/MainPage/MainPage.tsx\",\n  _s = $RefreshSig$();\nimport io from \"socket.io-client\";\nimport axios from \"axios\";\nimport { useEffect, useRef, useState } from \"react\";\nimport Cookies from \"js-cookie\";\nimport MainPageLoading from \"./MainPageLoading\";\nimport MainPageConnected from \"./MainPageConnected\";\nimport MainPageDefault from \"./MainPageDefault\";\nimport MainPageDisconnected from \"./MainPageDisconnected\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io(\"https://192.168.0.114:5000\");\nconst configuration = {\n  iceServers: [{\n    urls: \"stun:stun.l.google.com:19302\"\n  }]\n};\nexport function MainPage() {\n  _s();\n  const [localStream, setLocalStream] = useState();\n  const [infoSocket, setInfoSocket] = useState();\n  const [peerConnection, setPeerConnection] = useState(new RTCPeerConnection(configuration));\n  const [isLoading, setLoading] = useState(false);\n  const [isDisconnected, setDisconnected] = useState(false);\n  const [mediaRecorder, setMediaRecorder] = useState(undefined);\n  const [recordedChunks, setRecordedChunks] = useState();\n  const localStreamRef = useRef(undefined);\n  const infoSocketRef = useRef();\n  const infoSocketRefPrev = useRef();\n  const loadingRef = useRef();\n  const remoteAudioRef = useRef(null);\n  const mediaRecorderRef = useRef(undefined);\n  const recordedChunksRef = useRef();\n  useEffect(() => {\n    peerConnection.ontrack = event => {\n      if (event.streams && event.streams[0]) {\n        remoteAudioRef.current.srcObject = event.streams[0];\n      }\n    };\n    socket.on(\"connection\", data => {\n      console.log(localStreamRef.current);\n      setLoading(false);\n      startRecording(localStreamRef.current);\n      loadingRef.current = false;\n      setInfoSocket(prevState => {\n        return {\n          ...prevState,\n          connectedUserID: data.userID,\n          connectedUserSocketID: data.socketID,\n          isSendingOffer: data.isSendingOffer\n        };\n      });\n      infoSocketRef.current = {\n        ...infoSocketRef.current,\n        connectedUserID: data.userID,\n        connectedUserSocketID: data.socketID,\n        isSendingOffer: data.isSendingOffer\n      };\n    });\n    socket.on(\"candidate\", data => {\n      peerConnection.addIceCandidate(data.candidate).then(() => {\n        console.log(\"added Candidate\", data.candidate, \"from \", data.sender);\n      }).catch(error => console.log(\"Ошибка установки ICE кандидата\", error));\n    });\n    socket.on(\"answer\", async data => {\n      const answer = new RTCSessionDescription({\n        type: data.type,\n        sdp: data.sdp\n      });\n      try {\n        await peerConnection.setRemoteDescription(answer);\n        console.log(\"Удаленное описание ответа установлено успешно.\");\n      } catch (error) {\n        setLoading(false);\n        loadingRef.current = false;\n        console.error(\"Ошибка при установке удаленного описания ответа:\", error);\n      }\n    });\n    socket.on(\"offer\", async data => {\n      const offer = new RTCSessionDescription({\n        type: data.type,\n        sdp: data.sdp\n      });\n      try {\n        var _peerConnection$local;\n        await peerConnection.setRemoteDescription(offer);\n        const answer = await peerConnection.createAnswer();\n        await peerConnection.setLocalDescription(answer);\n        console.log(`emit answer to ${infoSocketRef.current}`);\n        socket.emit(\"answer\", {\n          type: \"answer\",\n          sdp: (_peerConnection$local = peerConnection.localDescription) === null || _peerConnection$local === void 0 ? void 0 : _peerConnection$local.sdp,\n          infoSocket: infoSocketRef.current\n        });\n      } catch (error) {\n        setLoading(false);\n        loadingRef.current = false;\n        console.error(\"Ошибка при установке удаленного описания предложения:\", error);\n      }\n    });\n    socket.on(\"endCall\", () => {\n      infoSocketRefPrev.current = infoSocketRef.current;\n      stopRecording().then(async audioBlob => {\n        var _infoSocketRefPrev$cu, _infoSocketRefPrev$cu2, _infoSocketRefPrev$cu3;\n        const formData = new FormData();\n        console.log(audioBlob);\n        formData.append(\"audioFile\", audioBlob, `Conv${(_infoSocketRefPrev$cu = infoSocketRefPrev.current) === null || _infoSocketRefPrev$cu === void 0 ? void 0 : _infoSocketRefPrev$cu.userID}and${(_infoSocketRefPrev$cu2 = infoSocketRefPrev.current) === null || _infoSocketRefPrev$cu2 === void 0 ? void 0 : _infoSocketRefPrev$cu2.connectedUserID}`);\n        formData.append(\"userId\", (_infoSocketRefPrev$cu3 = infoSocketRefPrev.current) === null || _infoSocketRefPrev$cu3 === void 0 ? void 0 : _infoSocketRefPrev$cu3.userID);\n        formData.forEach(el => {\n          console.log(el);\n        });\n        try {\n          const response = await axios.post(`https://192.168.0.114:5000/api/files/upload_recording`, formData, {\n            headers: {\n              \"Content-Type\": \"multipart/form-data\"\n            }\n          });\n          console.log(response.status);\n        } catch (err) {\n          console.error(err);\n        }\n      });\n      setInfoSocket({});\n      infoSocketRef.current = {};\n      setLocalStream(undefined);\n      localStreamRef.current = undefined;\n      setDisconnected(true);\n      mediaRecorder === null || mediaRecorder === void 0 ? void 0 : mediaRecorder.stop();\n    });\n    return () => {\n      localStream === null || localStream === void 0 ? void 0 : localStream.getTracks().forEach(track => track.stop());\n      mediaRecorder === null || mediaRecorder === void 0 ? void 0 : mediaRecorder.stop();\n      socket.off(\"connection\");\n      socket.off(\"offer\");\n      socket.off(\"answer\");\n      socket.off(\"candidate\");\n      socket.off(\"endCall\");\n    };\n  }, []);\n  const getUserId = () => {\n    const id = Cookies.get(\"userIdState\");\n    if (id === undefined) {\n      alert(\"Сначала войдите в аккаунт\");\n      return;\n    }\n    loadingRef.current = true;\n    socket.emit(\"auth\", id);\n    setInfoSocket(prevState => {\n      return {\n        ...prevState,\n        socketID: socket.id,\n        userID: id\n      };\n    });\n    infoSocketRef.current = {\n      ...infoSocketRef.current,\n      socketID: socket.id,\n      userID: id\n    };\n    getMedia(id);\n  };\n  const getMedia = async id => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true,\n        video: false\n      });\n      setLoading(true);\n      setLocalStream(stream);\n    } catch (err) {\n      setLoading(false);\n      loadingRef.current = false;\n      console.error(\"Не удалось получить доступ к микрофону\", err);\n    }\n  };\n  useEffect(() => {\n    if (infoSocket !== null && infoSocket !== void 0 && infoSocket.userID) {\n      getMedia(infoSocket.userID);\n    }\n  }, [infoSocket === null || infoSocket === void 0 ? void 0 : infoSocket.userID]);\n  useEffect(() => {\n    if (localStream && localStreamRef.current === undefined) {\n      startCall(localStream);\n      localStreamRef.current = localStream;\n    }\n  }, [localStream]);\n  useEffect(() => {\n    if (infoSocket !== null && infoSocket !== void 0 && infoSocket.isSendingOffer) {\n      createOffer();\n    }\n    sendIceCandidates();\n  }, [infoSocket === null || infoSocket === void 0 ? void 0 : infoSocket.connectedUserID]);\n  const startCall = async stream => {\n    try {\n      const offer = await peerConnection.createOffer();\n      await peerConnection.setLocalDescription(offer);\n      socket.emit(\"searchForAUser\", infoSocket === null || infoSocket === void 0 ? void 0 : infoSocket.userID);\n\n      // Добавляем треки в peerConnection\n      stream.getTracks().forEach(track => {\n        console.log(\"track\");\n        peerConnection.addTrack(track, stream);\n      });\n    } catch (error) {\n      console.error(\"Ошибка создания или установки предложения.\", error);\n      setLoading(false);\n      loadingRef.current = false;\n    }\n  };\n  const createOffer = async () => {\n    const offer = await peerConnection.createOffer();\n    peerConnection.setLocalDescription(offer).then(() => {\n      var _peerConnection$local2;\n      socket.emit(\"offer\", {\n        type: \"offer\",\n        sdp: (_peerConnection$local2 = peerConnection.localDescription) === null || _peerConnection$local2 === void 0 ? void 0 : _peerConnection$local2.sdp,\n        infoSocket: infoSocketRef.current\n      });\n    });\n  };\n  const sendIceCandidates = async () => {\n    peerConnection.onicecandidate = event => {\n      if (event.candidate) {\n        var _infoSocketRef$curren;\n        socket.emit(\"candidate\", {\n          candidate: event.candidate,\n          target: (_infoSocketRef$curren = infoSocketRef.current) === null || _infoSocketRef$curren === void 0 ? void 0 : _infoSocketRef$curren.connectedUserSocketID\n        });\n      }\n    };\n  };\n  const startRecording = stream => {\n    if (stream) {\n      const mediaRecorderInstance = new MediaRecorder(stream);\n      mediaRecorderRef.current = mediaRecorderInstance;\n      mediaRecorderInstance.ondataavailable = event => {\n        console.log(event.data.size, event.data);\n        if (event.data.size > 0) {\n          setRecordedChunks(event.data);\n          recordedChunksRef.current = event.data;\n          console.log(\"here\");\n        }\n      };\n      mediaRecorderInstance.start();\n      setMediaRecorder(mediaRecorderInstance);\n      console.log(\"Recording started\");\n    }\n  };\n  const stopRecording = () => {\n    return new Promise((resolve, reject) => {\n      console.log(infoSocketRef.current);\n      if (mediaRecorderRef.current) {\n        mediaRecorderRef.current.onstop = () => {\n          console.log(recordedChunksRef.current);\n          recordedChunksRef.current ? resolve(recordedChunksRef.current) : reject(\"empty recording\");\n        };\n        mediaRecorderRef.current.stop();\n        console.log(\"Recording stopped\");\n      }\n    });\n  };\n  const cancelLoading = () => {\n    setLoading(false);\n    loadingRef.current = false;\n    socket.emit(\"endCall\", infoSocketRef.current);\n  };\n  const terminateCall = () => {\n    if (localStream) {\n      localStream.getTracks().forEach(track => {\n        track.stop();\n      });\n      setLocalStream(undefined);\n      localStreamRef.current = undefined;\n    }\n    if (peerConnection) {\n      peerConnection.setLocalDescription(undefined);\n    }\n    setLoading(false);\n    loadingRef.current = false;\n    socket.emit(\"endCall\", infoSocketRef.current);\n    setDisconnected(true);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isDisconnected ? /*#__PURE__*/_jsxDEV(MainPageDisconnected, {\n      returnBack: setDisconnected\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 9\n    }, this) : loadingRef.current ? /*#__PURE__*/_jsxDEV(MainPageLoading, {\n      cancelLoading: cancelLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 9\n    }, this) : infoSocket !== null && infoSocket !== void 0 && infoSocket.connectedUserID ? /*#__PURE__*/_jsxDEV(MainPageConnected, {\n      localStream: localStream,\n      remoteAudioRef: remoteAudioRef,\n      terminateCall: terminateCall\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(MainPageDefault, {\n      getUserId: getUserId,\n      localStream: localStream,\n      remoteAudioRef: remoteAudioRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(MainPage, \"dmAfhFILlSGGcOG3wKWj0dZlZjI=\");\n_c = MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["io","axios","useEffect","useRef","useState","Cookies","MainPageLoading","MainPageConnected","MainPageDefault","MainPageDisconnected","jsxDEV","_jsxDEV","Fragment","_Fragment","socket","configuration","iceServers","urls","MainPage","_s","localStream","setLocalStream","infoSocket","setInfoSocket","peerConnection","setPeerConnection","RTCPeerConnection","isLoading","setLoading","isDisconnected","setDisconnected","mediaRecorder","setMediaRecorder","undefined","recordedChunks","setRecordedChunks","localStreamRef","infoSocketRef","infoSocketRefPrev","loadingRef","remoteAudioRef","mediaRecorderRef","recordedChunksRef","ontrack","event","streams","current","srcObject","on","data","console","log","startRecording","prevState","connectedUserID","userID","connectedUserSocketID","socketID","isSendingOffer","addIceCandidate","candidate","then","sender","catch","error","answer","RTCSessionDescription","type","sdp","setRemoteDescription","offer","_peerConnection$local","createAnswer","setLocalDescription","emit","localDescription","stopRecording","audioBlob","_infoSocketRefPrev$cu","_infoSocketRefPrev$cu2","_infoSocketRefPrev$cu3","formData","FormData","append","forEach","el","response","post","headers","status","err","stop","getTracks","track","off","getUserId","id","get","alert","getMedia","stream","navigator","mediaDevices","getUserMedia","audio","video","startCall","createOffer","sendIceCandidates","addTrack","_peerConnection$local2","onicecandidate","_infoSocketRef$curren","target","mediaRecorderInstance","MediaRecorder","ondataavailable","size","start","Promise","resolve","reject","onstop","cancelLoading","terminateCall","children","returnBack","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/goik4/Универ/corsework/Voice-Roulete-Coursework/Voice-Roulete-Coursework/roulete/client/src/routes/MainPage/MainPage.tsx"],"sourcesContent":["import io from \"socket.io-client\";\nimport axios from \"axios\";\nimport { useEffect, useRef, useState } from \"react\";\nimport Cookies from \"js-cookie\";\nimport MainPageLoading from \"./MainPageLoading\";\nimport MainPageConnected from \"./MainPageConnected\";\nimport MainPageDefault from \"./MainPageDefault\";\nimport MainPageDisconnected from \"./MainPageDisconnected\";\n\nconst socket = io(\"https://192.168.0.114:5000\");\nconst configuration = {\n  iceServers: [{ urls: \"stun:stun.l.google.com:19302\" }],\n};\n\nexport function MainPage() {\n  const [localStream, setLocalStream] = useState<LocalStream>();\n  const [infoSocket, setInfoSocket] = useState<setInfoSocket>();\n  const [peerConnection, setPeerConnection] = useState<RTCPeerConnection>(\n    new RTCPeerConnection(configuration)\n  );\n  const [isLoading, setLoading] = useState<boolean>(false);\n  const [isDisconnected, setDisconnected] = useState<boolean>(false);\n  const [mediaRecorder, setMediaRecorder] = useState<LocalRecorder>(undefined);\n  const [recordedChunks, setRecordedChunks] = useState<Blob>();\n\n  const localStreamRef = useRef<LocalStream>(undefined);\n  const infoSocketRef = useRef<setInfoSocket>();\n  const infoSocketRefPrev = useRef<setInfoSocket>();\n  const loadingRef = useRef<boolean>();\n  const remoteAudioRef = useRef<HTMLAudioElement>(null);\n  const mediaRecorderRef = useRef<LocalRecorder>(undefined);\n  const recordedChunksRef = useRef<Blob>();\n\n  useEffect(() => {\n    peerConnection.ontrack = (event) => {\n      if (event.streams && event.streams[0]) {\n        remoteAudioRef.current!.srcObject = event.streams[0];\n      }\n    };\n\n    socket.on(\"connection\", (data) => {\n      console.log(localStreamRef.current);\n      setLoading(false);\n      startRecording(localStreamRef.current);\n      loadingRef.current = false;\n      setInfoSocket((prevState) => {\n        return {\n          ...prevState,\n          connectedUserID: data.userID,\n          connectedUserSocketID: data.socketID,\n          isSendingOffer: data.isSendingOffer,\n        };\n      });\n      infoSocketRef.current = {\n        ...infoSocketRef.current,\n        connectedUserID: data.userID,\n        connectedUserSocketID: data.socketID,\n        isSendingOffer: data.isSendingOffer,\n      };\n    });\n\n    socket.on(\"candidate\", (data) => {\n      peerConnection\n        .addIceCandidate(data.candidate)\n        .then(() => {\n          console.log(\"added Candidate\", data.candidate, \"from \", data.sender);\n        })\n        .catch((error) => console.log(\"Ошибка установки ICE кандидата\", error));\n    });\n\n    socket.on(\"answer\", async (data) => {\n      const answer = new RTCSessionDescription({\n        type: data.type,\n        sdp: data.sdp,\n      });\n\n      try {\n        await peerConnection.setRemoteDescription(answer);\n        console.log(\"Удаленное описание ответа установлено успешно.\");\n      } catch (error) {\n        setLoading(false);\n        loadingRef.current = false;\n        console.error(\n          \"Ошибка при установке удаленного описания ответа:\",\n          error\n        );\n      }\n    });\n\n    socket.on(\"offer\", async (data) => {\n      const offer = new RTCSessionDescription({\n        type: data.type,\n        sdp: data.sdp,\n      });\n\n      try {\n        await peerConnection.setRemoteDescription(offer);\n        const answer = await peerConnection.createAnswer();\n        await peerConnection.setLocalDescription(answer);\n        console.log(`emit answer to ${infoSocketRef.current}`);\n        socket.emit(\"answer\", {\n          type: \"answer\",\n          sdp: peerConnection.localDescription?.sdp,\n          infoSocket: infoSocketRef.current,\n        });\n      } catch (error) {\n        setLoading(false);\n        loadingRef.current = false;\n        console.error(\n          \"Ошибка при установке удаленного описания предложения:\",\n          error\n        );\n      }\n    });\n\n    socket.on(\"endCall\", () => {\n      infoSocketRefPrev.current = infoSocketRef.current;\n      stopRecording().then(async (audioBlob) => {\n        const formData = new FormData();\n        console.log(audioBlob);\n        formData.append(\n          \"audioFile\",\n          audioBlob,\n          `Conv${infoSocketRefPrev.current?.userID}and${infoSocketRefPrev.current?.connectedUserID}`\n        );\n        formData.append(\n          \"userId\",\n          infoSocketRefPrev.current?.userID as string,\n        )\n        formData.forEach((el) => {\n          console.log(el);\n        });\n        try {\n          const response = await axios.post(\n            `https://192.168.0.114:5000/api/files/upload_recording`,\n            formData,\n            {\n              headers: {\n                \"Content-Type\": \"multipart/form-data\",\n              },\n            }\n          );\n          console.log(response.status);\n        } catch (err) {\n          console.error(err);\n        }\n      });\n      setInfoSocket({});\n      infoSocketRef.current = {};\n      setLocalStream(undefined);\n      localStreamRef.current = undefined;\n      setDisconnected(true);\n      mediaRecorder?.stop();\n    });\n\n    return () => {\n      localStream?.getTracks().forEach((track) => track.stop());\n      mediaRecorder?.stop();\n      socket.off(\"connection\");\n      socket.off(\"offer\");\n      socket.off(\"answer\");\n      socket.off(\"candidate\");\n      socket.off(\"endCall\");\n    };\n  }, []);\n\n  const getUserId = () => {\n    const id = Cookies.get(\"userIdState\");\n    if (id === undefined) {\n      alert(\"Сначала войдите в аккаунт\");\n      return;\n    }\n    loadingRef.current = true;\n    socket.emit(\"auth\", id);\n    setInfoSocket((prevState) => {\n      return { ...prevState, socketID: socket.id, userID: id };\n    });\n    infoSocketRef.current = {\n      ...infoSocketRef.current,\n      socketID: socket.id,\n      userID: id,\n    };\n    getMedia(id);\n  };\n\n  const getMedia = async (id: string) => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true,\n        video: false,\n      });\n      setLoading(true);\n      setLocalStream(stream);\n    } catch (err) {\n      setLoading(false);\n      loadingRef.current = false;\n      console.error(\"Не удалось получить доступ к микрофону\", err);\n    }\n  };\n\n  useEffect(() => {\n    if (infoSocket?.userID) {\n      getMedia(infoSocket.userID);\n    }\n  }, [infoSocket?.userID]);\n\n  useEffect(() => {\n    if (localStream && localStreamRef.current === undefined) {\n      startCall(localStream);\n      localStreamRef.current = localStream;\n    }\n  }, [localStream]);\n\n  useEffect(() => {\n    if (infoSocket?.isSendingOffer) {\n      createOffer();\n    }\n    sendIceCandidates();\n  }, [infoSocket?.connectedUserID]);\n\n  const startCall = async (stream: MediaStream) => {\n    try {\n      const offer = await peerConnection.createOffer();\n      await peerConnection.setLocalDescription(offer);\n      socket.emit(\"searchForAUser\", infoSocket?.userID);\n\n      // Добавляем треки в peerConnection\n      stream.getTracks().forEach((track) => {\n        console.log(\"track\");\n        peerConnection.addTrack(track, stream);\n      });\n    } catch (error) {\n      console.error(\"Ошибка создания или установки предложения.\", error);\n      setLoading(false);\n      loadingRef.current = false;\n    }\n  };\n\n  const createOffer = async () => {\n    const offer = await peerConnection.createOffer();\n    peerConnection.setLocalDescription(offer).then(() => {\n      socket.emit(\"offer\", {\n        type: \"offer\",\n        sdp: peerConnection.localDescription?.sdp,\n        infoSocket: infoSocketRef.current,\n      });\n    });\n  };\n\n  const sendIceCandidates = async () => {\n    peerConnection.onicecandidate = (event) => {\n      if (event.candidate) {\n        socket.emit(\"candidate\", {\n          candidate: event.candidate,\n          target: infoSocketRef.current?.connectedUserSocketID,\n        });\n      }\n    };\n  };\n\n  const startRecording = (stream: LocalStream) => {\n    if (stream) {\n      const mediaRecorderInstance = new MediaRecorder(stream);\n      mediaRecorderRef.current = mediaRecorderInstance;\n\n      mediaRecorderInstance.ondataavailable = (event) => {\n        console.log(event.data.size, event.data);\n        if (event.data.size > 0) {\n          setRecordedChunks(event.data);\n          recordedChunksRef.current = event.data;\n          console.log(\"here\");\n        }\n      };\n\n      mediaRecorderInstance.start();\n      setMediaRecorder(mediaRecorderInstance);\n      console.log(\"Recording started\");\n    }\n  };\n\n  const stopRecording = () => {\n    return new Promise<Blob>((resolve, reject) => {\n      console.log(infoSocketRef.current);\n      if (mediaRecorderRef.current) {\n        mediaRecorderRef.current!.onstop = () => {\n          console.log(recordedChunksRef.current);\n          recordedChunksRef.current\n            ? resolve(recordedChunksRef.current)\n            : reject(\"empty recording\");\n        };\n        mediaRecorderRef.current!.stop();\n        console.log(\"Recording stopped\");\n      }\n    });\n  };\n\n  const cancelLoading = () => {\n    setLoading(false);\n    loadingRef.current = false;\n    socket.emit(\"endCall\", infoSocketRef.current);\n  };\n\n  const terminateCall = () => {\n    if (localStream) {\n      localStream.getTracks().forEach((track) => {\n        track.stop();\n      });\n      setLocalStream(undefined);\n      localStreamRef.current = undefined;\n    }\n    if (peerConnection) {\n      peerConnection.setLocalDescription(undefined);\n    }\n    setLoading(false);\n    loadingRef.current = false;\n    socket.emit(\"endCall\", infoSocketRef.current);\n    setDisconnected(true);\n  };\n\n  return (\n    <>\n      {isDisconnected ? (\n        <MainPageDisconnected returnBack={setDisconnected} />\n      ) : loadingRef.current ? (\n        <MainPageLoading cancelLoading={cancelLoading} />\n      ) : infoSocket?.connectedUserID ? (\n        <MainPageConnected\n          localStream={localStream}\n          remoteAudioRef={remoteAudioRef}\n          terminateCall={terminateCall}\n        />\n      ) : (\n        <MainPageDefault\n          getUserId={getUserId}\n          localStream={localStream}\n          remoteAudioRef={remoteAudioRef}\n        />\n      )}\n    </>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}